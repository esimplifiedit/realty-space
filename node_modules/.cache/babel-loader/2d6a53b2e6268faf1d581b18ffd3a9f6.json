{"ast":null,"code":"import _objectSpread from\"D:/localserver-php8/htdocs/react/realtyspace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{GET_WALLET_FAIL,GET_WALLET_SUCCESS,GET_CRYPTO_ORDERS_SUCCESS,GET_CRYPTO_ORDERS_FAIL}from\"./actionTypes\";var INIT_STATE={wallet:{},orders:[]};var Crypto=function Crypto(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:INIT_STATE;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case GET_WALLET_SUCCESS:return _objectSpread(_objectSpread({},state),{},{wallet:action.payload});case GET_WALLET_FAIL:return _objectSpread(_objectSpread({},state),{},{error:action.payload});case GET_CRYPTO_ORDERS_SUCCESS:return _objectSpread(_objectSpread({},state),{},{orders:action.payload});case GET_CRYPTO_ORDERS_FAIL:return _objectSpread(_objectSpread({},state),{},{error:action.payload});default:return state;}};export default Crypto;","map":{"version":3,"sources":["D:/localserver-php8/htdocs/react/realtyspace/src/store/crypto/reducer.js"],"names":["GET_WALLET_FAIL","GET_WALLET_SUCCESS","GET_CRYPTO_ORDERS_SUCCESS","GET_CRYPTO_ORDERS_FAIL","INIT_STATE","wallet","orders","Crypto","state","action","type","payload","error"],"mappings":"kKAAA,OACEA,eADF,CAEEC,kBAFF,CAGEC,yBAHF,CAIEC,sBAJF,KAKO,eALP,CAOA,GAAMC,CAAAA,UAAU,CAAG,CACjBC,MAAM,CAAE,EADS,CAEjBC,MAAM,CAAE,EAFS,CAAnB,CAKA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAgC,IAA/BC,CAAAA,KAA+B,2DAAvBJ,UAAuB,IAAXK,CAAAA,MAAW,2CAC7C,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKT,CAAAA,kBAAL,CACE,sCACKO,KADL,MAEEH,MAAM,CAAEI,MAAM,CAACE,OAFjB,GAKF,IAAKX,CAAAA,eAAL,CACE,sCACKQ,KADL,MAEEI,KAAK,CAAEH,MAAM,CAACE,OAFhB,GAKF,IAAKT,CAAAA,yBAAL,CACE,sCACKM,KADL,MAEEF,MAAM,CAAEG,MAAM,CAACE,OAFjB,GAKF,IAAKR,CAAAA,sBAAL,CACE,sCACKK,KADL,MAEEI,KAAK,CAAEH,MAAM,CAACE,OAFhB,GAKF,QACE,MAAOH,CAAAA,KAAP,CA1BJ,CA4BD,CA7BD,CA+BA,cAAeD,CAAAA,MAAf","sourcesContent":["import {\n  GET_WALLET_FAIL,\n  GET_WALLET_SUCCESS,\n  GET_CRYPTO_ORDERS_SUCCESS,\n  GET_CRYPTO_ORDERS_FAIL,\n} from \"./actionTypes\"\n\nconst INIT_STATE = {\n  wallet: {},\n  orders: [],\n}\n\nconst Crypto = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case GET_WALLET_SUCCESS:\n      return {\n        ...state,\n        wallet: action.payload,\n      }\n\n    case GET_WALLET_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    case GET_CRYPTO_ORDERS_SUCCESS:\n      return {\n        ...state,\n        orders: action.payload,\n      }\n\n    case GET_CRYPTO_ORDERS_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default Crypto\n"]},"metadata":{},"sourceType":"module"}
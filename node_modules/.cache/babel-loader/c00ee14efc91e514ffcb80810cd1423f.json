{"ast":null,"code":"var _jsxFileName = \"D:\\\\localserver-php8\\\\htdocs\\\\react\\\\realtyspace\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\"; // Import Routes\n\nimport { authProtectedRoutes, publicRoutes } from \"./routes/\";\nimport AppRoute from \"./routes/route\"; // layouts\n\nimport VerticalLayout from \"./components/VerticalLayout/\";\nimport HorizontalLayout from \"./components/HorizontalLayout/\";\nimport NonAuthLayout from \"./components/NonAuthLayout\"; // Import scss\n\nimport \"./assets/scss/theme.scss\"; // Import Firebase Configuration file\n// import { initFirebaseBackend } from \"./helpers/firebase_helper\"\n// Import fackbackend Configuration file\n\nimport fakeBackend from \"./helpers/AuthType/fakeBackend\"; // Activating fake backend\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfakeBackend(); // Activating fake firebase\n// const firebaseConfig = {\n//   apiKey: process.env.REACT_APP_APIKEY,\n//   authDomain: process.env.REACT_APP_AUTHDOMAIN,\n//   databaseURL: process.env.REACT_APP_DATABASEURL,\n//   projectId: process.env.REACT_APP_PROJECTID,\n//   storageBucket: process.env.REACT_APP_STORAGEBUCKET,\n//   messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\n//   appId: process.env.REACT_APP_APPID,\n//   measurementId: process.env.REACT_APP_MEASUREMENTID,\n// };\n// init firebase backend\n// initFirebaseBackend(firebaseConfig);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getLayout = () => {\n      let layoutCls = VerticalLayout;\n\n      switch (this.props.layout.layoutType) {\n        case \"horizontal\":\n          layoutCls = HorizontalLayout;\n          break;\n\n        default:\n          layoutCls = VerticalLayout;\n          break;\n      }\n\n      return layoutCls;\n    };\n\n    this.state = {};\n    this.getLayout = this.getLayout.bind(this);\n  }\n  /**\r\n   * Returns the layout\r\n   */\n\n\n  render() {\n    const Layout = this.getLayout();\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [publicRoutes.map((route, idx) => /*#__PURE__*/_jsxDEV(AppRoute, {\n            path: route.path,\n            layout: NonAuthLayout,\n            component: route.component,\n            isAuthProtected: false\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)), authProtectedRoutes.map((route, idx) => /*#__PURE__*/_jsxDEV(AppRoute, {\n            path: route.path,\n            layout: Layout,\n            component: route.component,\n            isAuthProtected: true,\n            exact: true\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    layout: state.Layout\n  };\n};\n\nApp.propTypes = {\n  layout: PropTypes.object\n};\nexport default connect(mapStateToProps, null)(App);","map":{"version":3,"sources":["D:/localserver-php8/htdocs/react/realtyspace/src/App.js"],"names":["React","Component","PropTypes","BrowserRouter","Router","Switch","connect","authProtectedRoutes","publicRoutes","AppRoute","VerticalLayout","HorizontalLayout","NonAuthLayout","fakeBackend","App","constructor","props","getLayout","layoutCls","layout","layoutType","state","bind","render","Layout","map","route","idx","path","component","mapStateToProps","propTypes","object"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,QAAgD,kBAAhD;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,WAAlD;AACA,OAAOC,QAAP,MAAqB,gBAArB,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,aAAP,MAA0B,4BAA1B,C,CAEA;;AACA,OAAO,0BAAP,C,CAEA;AACA;AAEA;;AACA,OAAOC,WAAP,MAAwB,gCAAxB,C,CAEA;;;AACAA,WAAW,G,CAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,MAAMC,GAAN,SAAkBb,SAAlB,CAA4B;AAC1Bc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,SATmB,GASP,MAAM;AAChB,UAAIC,SAAS,GAAGR,cAAhB;;AAEA,cAAQ,KAAKM,KAAL,CAAWG,MAAX,CAAkBC,UAA1B;AACE,aAAK,YAAL;AACEF,UAAAA,SAAS,GAAGP,gBAAZ;AACA;;AACF;AACEO,UAAAA,SAAS,GAAGR,cAAZ;AACA;AANJ;;AAQA,aAAOQ,SAAP;AACD,KArBkB;;AAEjB,SAAKG,KAAL,GAAa,EAAb;AACA,SAAKJ,SAAL,GAAiB,KAAKA,SAAL,CAAeK,IAAf,CAAoB,IAApB,CAAjB;AACD;AAED;AACF;AACA;;;AAeEC,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,KAAKP,SAAL,EAAf;AAEA,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,6BACE,QAAC,MAAD;AAAA,+BACE,QAAC,MAAD;AAAA,qBACGT,YAAY,CAACiB,GAAb,CAAiB,CAACC,KAAD,EAAQC,GAAR,kBAChB,QAAC,QAAD;AACE,YAAA,IAAI,EAAED,KAAK,CAACE,IADd;AAEE,YAAA,MAAM,EAAEhB,aAFV;AAGE,YAAA,SAAS,EAAEc,KAAK,CAACG,SAHnB;AAKE,YAAA,eAAe,EAAE;AALnB,aAIOF,GAJP;AAAA;AAAA;AAAA;AAAA,kBADD,CADH,EAWGpB,mBAAmB,CAACkB,GAApB,CAAwB,CAACC,KAAD,EAAQC,GAAR,kBACvB,QAAC,QAAD;AACE,YAAA,IAAI,EAAED,KAAK,CAACE,IADd;AAEE,YAAA,MAAM,EAAEJ,MAFV;AAGE,YAAA,SAAS,EAAEE,KAAK,CAACG,SAHnB;AAKE,YAAA,eAAe,EAAE,IALnB;AAME,YAAA,KAAK;AANP,aAIOF,GAJP;AAAA;AAAA;AAAA;AAAA,kBADD,CAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA4BD;;AAvDyB;;AA0D5B,MAAMG,eAAe,GAAGT,KAAK,IAAI;AAC/B,SAAO;AACLF,IAAAA,MAAM,EAAEE,KAAK,CAACG;AADT,GAAP;AAGD,CAJD;;AAMAV,GAAG,CAACiB,SAAJ,GAAgB;AACdZ,EAAAA,MAAM,EAAEjB,SAAS,CAAC8B;AADJ,CAAhB;AAIA,eAAe1B,OAAO,CAACwB,eAAD,EAAkB,IAAlB,CAAP,CAA+BhB,GAA/B,CAAf","sourcesContent":["import React, { Component } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\n\r\n// Import Routes\r\nimport { authProtectedRoutes, publicRoutes } from \"./routes/\"\r\nimport AppRoute from \"./routes/route\"\r\n\r\n// layouts\r\nimport VerticalLayout from \"./components/VerticalLayout/\"\r\nimport HorizontalLayout from \"./components/HorizontalLayout/\"\r\nimport NonAuthLayout from \"./components/NonAuthLayout\"\r\n\r\n// Import scss\r\nimport \"./assets/scss/theme.scss\"\r\n\r\n// Import Firebase Configuration file\r\n// import { initFirebaseBackend } from \"./helpers/firebase_helper\"\r\n\r\n// Import fackbackend Configuration file\r\nimport fakeBackend from \"./helpers/AuthType/fakeBackend\"\r\n\r\n// Activating fake backend\r\nfakeBackend()\r\n\r\n// Activating fake firebase\r\n// const firebaseConfig = {\r\n//   apiKey: process.env.REACT_APP_APIKEY,\r\n//   authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n//   databaseURL: process.env.REACT_APP_DATABASEURL,\r\n//   projectId: process.env.REACT_APP_PROJECTID,\r\n//   storageBucket: process.env.REACT_APP_STORAGEBUCKET,\r\n//   messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\r\n//   appId: process.env.REACT_APP_APPID,\r\n//   measurementId: process.env.REACT_APP_MEASUREMENTID,\r\n// };\r\n\r\n// init firebase backend\r\n// initFirebaseBackend(firebaseConfig);\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n    this.getLayout = this.getLayout.bind(this)\r\n  }\r\n\r\n  /**\r\n   * Returns the layout\r\n   */\r\n  getLayout = () => {\r\n    let layoutCls = VerticalLayout\r\n\r\n    switch (this.props.layout.layoutType) {\r\n      case \"horizontal\":\r\n        layoutCls = HorizontalLayout\r\n        break\r\n      default:\r\n        layoutCls = VerticalLayout\r\n        break\r\n    }\r\n    return layoutCls\r\n  }\r\n\r\n  render() {\r\n    const Layout = this.getLayout()\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Router>\r\n          <Switch>\r\n            {publicRoutes.map((route, idx) => (\r\n              <AppRoute\r\n                path={route.path}\r\n                layout={NonAuthLayout}\r\n                component={route.component}\r\n                key={idx}\r\n                isAuthProtected={false}\r\n              />\r\n            ))}\r\n\r\n            {authProtectedRoutes.map((route, idx) => (\r\n              <AppRoute\r\n                path={route.path}\r\n                layout={Layout}\r\n                component={route.component}\r\n                key={idx}\r\n                isAuthProtected={true}\r\n                exact\r\n              />\r\n            ))}\r\n          </Switch>\r\n        </Router>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    layout: state.Layout,\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  layout: PropTypes.object,\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(App)\r\n"]},"metadata":{},"sourceType":"module"}
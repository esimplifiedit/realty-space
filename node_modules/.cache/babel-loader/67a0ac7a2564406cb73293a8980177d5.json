{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\"; // Crypto Redux States\n\nimport { GET_INBOX_MAILS, ADD_NEW_INBOX_MAIL, DELETE_INBOX_MAIL, GET_STARRED_MAILS, GET_IMPORTANT_MAILS, GET_DRAFT_MAILS, GET_SENT_MAILS, GET_TRASH_MAILS } from \"./actionTypes\";\nimport { getInboxMailsSuccess, getInboxMailsFail, addInboxMailFail, addInboxMailSuccess, deleteInboxMailSuccess, deleteInboxMailFail, getStarredMailsSuccess, getStarredMailsFail, getImportantMailsSuccess, getImportantMailsFail, getDraftMailsSuccess, getDraftMailsFail, getSentMailsSuccess, getSentMailsFail, getTrashMailsSuccess, getTrashMailsFail } from \"./actions\"; //Include Both Helper File with needed methods\n\nimport { getInboxMails, addNewInboxMail, deleteInboxMail, getStarredMails, getImportantMails, getDraftMails, getSentMails, getTrashMails } from \"helpers/fakebackend_helper\";\n\nfunction* fetchInboxMails() {\n  try {\n    const response = yield call(getInboxMails);\n    yield put(getInboxMailsSuccess(response));\n  } catch (error) {\n    yield put(getInboxMailsFail(error));\n  }\n}\n\nfunction* fetchStarredMails() {\n  try {\n    const response = yield call(getStarredMails);\n    yield put(getStarredMailsSuccess(response));\n  } catch (error) {\n    yield put(getStarredMailsFail(error));\n  }\n}\n\nfunction* fetchImportantMails() {\n  try {\n    const response = yield call(getImportantMails);\n    yield put(getImportantMailsSuccess(response));\n  } catch (error) {\n    yield put(getImportantMailsFail(error));\n  }\n}\n\nfunction* fetchDraftMails() {\n  try {\n    const response = yield call(getDraftMails);\n    yield put(getDraftMailsSuccess(response));\n  } catch (error) {\n    yield put(getDraftMailsFail(error));\n  }\n}\n\nfunction* fetchSentMails() {\n  try {\n    const response = yield call(getSentMails);\n    yield put(getSentMailsSuccess(response));\n  } catch (error) {\n    yield put(getSentMailsFail(error));\n  }\n}\n\nfunction* fetchTrashMails() {\n  try {\n    const response = yield call(getTrashMails);\n    yield put(getTrashMailsSuccess(response));\n  } catch (error) {\n    yield put(getTrashMailsFail(error));\n  }\n}\n\nfunction* onAddNewInboxMail({\n  payload: inboxmail\n}) {\n  try {\n    const response = yield call(addNewInboxMail, inboxmail);\n    yield put(addInboxMailSuccess(response));\n  } catch (error) {\n    yield put(addInboxMailFail(error));\n  }\n}\n\nfunction* onDeleteInboxMail({\n  payload: inboxmail\n}) {\n  try {\n    const response = yield call(deleteInboxMail, inboxmail);\n    yield put(deleteInboxMailSuccess(response));\n  } catch (error) {\n    yield put(deleteInboxMailFail(error));\n  }\n}\n\nfunction* mailsSaga() {\n  yield takeEvery(GET_INBOX_MAILS, fetchInboxMails);\n  yield takeEvery(GET_STARRED_MAILS, fetchStarredMails);\n  yield takeEvery(GET_IMPORTANT_MAILS, fetchImportantMails);\n  yield takeEvery(GET_DRAFT_MAILS, fetchDraftMails);\n  yield takeEvery(GET_SENT_MAILS, fetchSentMails);\n  yield takeEvery(GET_TRASH_MAILS, fetchTrashMails);\n  yield takeEvery(ADD_NEW_INBOX_MAIL, onAddNewInboxMail);\n  yield takeEvery(DELETE_INBOX_MAIL, onDeleteInboxMail);\n}\n\nexport default mailsSaga;","map":{"version":3,"sources":["D:/localserver-php8/htdocs/react/realtyspace/src/store/mails/saga.js"],"names":["call","put","takeEvery","GET_INBOX_MAILS","ADD_NEW_INBOX_MAIL","DELETE_INBOX_MAIL","GET_STARRED_MAILS","GET_IMPORTANT_MAILS","GET_DRAFT_MAILS","GET_SENT_MAILS","GET_TRASH_MAILS","getInboxMailsSuccess","getInboxMailsFail","addInboxMailFail","addInboxMailSuccess","deleteInboxMailSuccess","deleteInboxMailFail","getStarredMailsSuccess","getStarredMailsFail","getImportantMailsSuccess","getImportantMailsFail","getDraftMailsSuccess","getDraftMailsFail","getSentMailsSuccess","getSentMailsFail","getTrashMailsSuccess","getTrashMailsFail","getInboxMails","addNewInboxMail","deleteInboxMail","getStarredMails","getImportantMails","getDraftMails","getSentMails","getTrashMails","fetchInboxMails","response","error","fetchStarredMails","fetchImportantMails","fetchDraftMails","fetchSentMails","fetchTrashMails","onAddNewInboxMail","payload","inboxmail","onDeleteInboxMail","mailsSaga"],"mappings":"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","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\"\n\n// Crypto Redux States\nimport {\n  GET_INBOX_MAILS,\n  ADD_NEW_INBOX_MAIL,\n  DELETE_INBOX_MAIL,\n  GET_STARRED_MAILS,\n  GET_IMPORTANT_MAILS,\n  GET_DRAFT_MAILS,\n  GET_SENT_MAILS,\n  GET_TRASH_MAILS,\n} from \"./actionTypes\"\n\nimport {\n  getInboxMailsSuccess,\n  getInboxMailsFail,\n  addInboxMailFail,\n  addInboxMailSuccess,\n  deleteInboxMailSuccess,\n  deleteInboxMailFail,\n  getStarredMailsSuccess,\n  getStarredMailsFail,\n  getImportantMailsSuccess,\n  getImportantMailsFail,\n  getDraftMailsSuccess,\n  getDraftMailsFail,\n  getSentMailsSuccess,\n  getSentMailsFail,\n  getTrashMailsSuccess,\n  getTrashMailsFail,\n} from \"./actions\"\n\n//Include Both Helper File with needed methods\nimport {\n  getInboxMails,\n  addNewInboxMail,\n  deleteInboxMail,\n  getStarredMails,\n  getImportantMails,\n  getDraftMails,\n  getSentMails,\n  getTrashMails,\n} from \"helpers/fakebackend_helper\"\n\nfunction* fetchInboxMails() {\n  try {\n    const response = yield call(getInboxMails)\n    yield put(getInboxMailsSuccess(response))\n  } catch (error) {\n    yield put(getInboxMailsFail(error))\n  }\n}\n\nfunction* fetchStarredMails() {\n  try {\n    const response = yield call(getStarredMails)\n    yield put(getStarredMailsSuccess(response))\n  } catch (error) {\n    yield put(getStarredMailsFail(error))\n  }\n}\n\nfunction* fetchImportantMails() {\n  try {\n    const response = yield call(getImportantMails)\n    yield put(getImportantMailsSuccess(response))\n  } catch (error) {\n    yield put(getImportantMailsFail(error))\n  }\n}\n\nfunction* fetchDraftMails() {\n  try {\n    const response = yield call(getDraftMails)\n    yield put(getDraftMailsSuccess(response))\n  } catch (error) {\n    yield put(getDraftMailsFail(error))\n  }\n}\n\nfunction* fetchSentMails() {\n  try {\n    const response = yield call(getSentMails)\n    yield put(getSentMailsSuccess(response))\n  } catch (error) {\n    yield put(getSentMailsFail(error))\n  }\n}\n\nfunction* fetchTrashMails() {\n  try {\n    const response = yield call(getTrashMails)\n    yield put(getTrashMailsSuccess(response))\n  } catch (error) {\n    yield put(getTrashMailsFail(error))\n  }\n}\n\nfunction* onAddNewInboxMail({ payload: inboxmail }) {\n  try {\n    const response = yield call(addNewInboxMail, inboxmail)\n    yield put(addInboxMailSuccess(response))\n  } catch (error) {\n\n    yield put(addInboxMailFail(error))\n  }\n}\n\nfunction* onDeleteInboxMail({ payload: inboxmail }) {\n  try {\n    const response = yield call(deleteInboxMail, inboxmail)\n    yield put(deleteInboxMailSuccess(response))\n  } catch (error) {\n    yield put(deleteInboxMailFail(error))\n  }\n}\n\n\n\nfunction* mailsSaga() {\n  yield takeEvery(GET_INBOX_MAILS, fetchInboxMails)\n  yield takeEvery(GET_STARRED_MAILS, fetchStarredMails)\n  yield takeEvery(GET_IMPORTANT_MAILS, fetchImportantMails)\n  yield takeEvery(GET_DRAFT_MAILS, fetchDraftMails)\n  yield takeEvery(GET_SENT_MAILS, fetchSentMails)\n  yield takeEvery(GET_TRASH_MAILS, fetchTrashMails)\n  yield takeEvery(ADD_NEW_INBOX_MAIL, onAddNewInboxMail)\n  yield takeEvery(DELETE_INBOX_MAIL, onDeleteInboxMail)\n}\n\nexport default mailsSaga"]},"metadata":{},"sourceType":"module"}
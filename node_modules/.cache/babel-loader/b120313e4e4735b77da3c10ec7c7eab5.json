{"ast":null,"code":"import _toConsumableArray from\"D:/localserver-php8/htdocs/react/realtyspace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:/localserver-php8/htdocs/react/realtyspace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{GET_USERS_SUCCESS,GET_USERS_FAIL,ADD_USER_SUCCESS,ADD_USER_FAIL,UPDATE_USER_SUCCESS,UPDATE_USER_FAIL,DELETE_USER_SUCCESS,DELETE_USER_FAIL,GET_USER_PROFILE_SUCCESS,GET_USER_PROFILE_FAIL}from\"./actionTypes\";var INIT_STATE={users:[],userProfile:{},error:{}};var contacts=function contacts(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:INIT_STATE;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case GET_USERS_SUCCESS:return _objectSpread(_objectSpread({},state),{},{users:action.payload});case GET_USERS_FAIL:return _objectSpread(_objectSpread({},state),{},{error:action.payload});case ADD_USER_SUCCESS:return _objectSpread(_objectSpread({},state),{},{users:[].concat(_toConsumableArray(state.users),[action.payload])});case ADD_USER_FAIL:return _objectSpread(_objectSpread({},state),{},{error:action.payload});case GET_USER_PROFILE_SUCCESS:return _objectSpread(_objectSpread({},state),{},{userProfile:action.payload});case UPDATE_USER_SUCCESS:return _objectSpread(_objectSpread({},state),{},{users:state.users.map(function(user){return user.id.toString()===action.payload.id.toString()?_objectSpread({user:user},action.payload):user;})});case UPDATE_USER_FAIL:return _objectSpread(_objectSpread({},state),{},{error:action.payload});case DELETE_USER_SUCCESS:return _objectSpread(_objectSpread({},state),{},{users:state.users.filter(function(user){return user.id.toString()!==action.payload.id.toString();})});case DELETE_USER_FAIL:return _objectSpread(_objectSpread({},state),{},{error:action.payload});case GET_USER_PROFILE_FAIL:return _objectSpread(_objectSpread({},state),{},{error:action.payload});default:return state;}};export default contacts;","map":{"version":3,"sources":["D:/localserver-php8/htdocs/react/realtyspace/src/store/contacts/reducer.js"],"names":["GET_USERS_SUCCESS","GET_USERS_FAIL","ADD_USER_SUCCESS","ADD_USER_FAIL","UPDATE_USER_SUCCESS","UPDATE_USER_FAIL","DELETE_USER_SUCCESS","DELETE_USER_FAIL","GET_USER_PROFILE_SUCCESS","GET_USER_PROFILE_FAIL","INIT_STATE","users","userProfile","error","contacts","state","action","type","payload","map","user","id","toString","filter"],"mappings":"6UAAA,OACEA,iBADF,CAEEC,cAFF,CAGEC,gBAHF,CAIEC,aAJF,CAKEC,mBALF,CAMEC,gBANF,CAOEC,mBAPF,CAQEC,gBARF,CASEC,wBATF,CAUEC,qBAVF,KAWO,eAXP,CAaA,GAAMC,CAAAA,UAAU,CAAG,CACjBC,KAAK,CAAE,EADU,CAEjBC,WAAW,CAAE,EAFI,CAGjBC,KAAK,CAAE,EAHU,CAAnB,CAMA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAgC,IAA/BC,CAAAA,KAA+B,2DAAvBL,UAAuB,IAAXM,CAAAA,MAAW,2CAC/C,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKjB,CAAAA,iBAAL,CACE,sCACKe,KADL,MAEEJ,KAAK,CAAEK,MAAM,CAACE,OAFhB,GAKF,IAAKjB,CAAAA,cAAL,CACE,sCACKc,KADL,MAEEF,KAAK,CAAEG,MAAM,CAACE,OAFhB,GAKF,IAAKhB,CAAAA,gBAAL,CACE,sCACKa,KADL,MAEEJ,KAAK,8BAAMI,KAAK,CAACJ,KAAZ,GAAmBK,MAAM,CAACE,OAA1B,EAFP,GAKF,IAAKf,CAAAA,aAAL,CACE,sCACKY,KADL,MAEEF,KAAK,CAAEG,MAAM,CAACE,OAFhB,GAKF,IAAKV,CAAAA,wBAAL,CACE,sCACKO,KADL,MAEEH,WAAW,CAAEI,MAAM,CAACE,OAFtB,GAKA,IAAKd,CAAAA,mBAAL,CACE,sCACKW,KADL,MAEEJ,KAAK,CAAEI,KAAK,CAACJ,KAAN,CAAYQ,GAAZ,CAAgB,SAAAC,IAAI,QACzBA,CAAAA,IAAI,CAACC,EAAL,CAAQC,QAAR,KAAuBN,MAAM,CAACE,OAAP,CAAeG,EAAf,CAAkBC,QAAlB,EAAvB,gBACMF,IAAI,CAAJA,IADN,EACeJ,MAAM,CAACE,OADtB,EAEIE,IAHqB,EAApB,CAFT,GASF,IAAKf,CAAAA,gBAAL,CACE,sCACKU,KADL,MAEEF,KAAK,CAAEG,MAAM,CAACE,OAFhB,GAKF,IAAKZ,CAAAA,mBAAL,CACE,sCACKS,KADL,MAEEJ,KAAK,CAAEI,KAAK,CAACJ,KAAN,CAAYY,MAAZ,CACL,SAAAH,IAAI,QAAIA,CAAAA,IAAI,CAACC,EAAL,CAAQC,QAAR,KAAuBN,MAAM,CAACE,OAAP,CAAeG,EAAf,CAAkBC,QAAlB,EAA3B,EADC,CAFT,GAOF,IAAKf,CAAAA,gBAAL,CACE,sCACKQ,KADL,MAEEF,KAAK,CAAEG,MAAM,CAACE,OAFhB,GAKJ,IAAKT,CAAAA,qBAAL,CACE,sCACKM,KADL,MAEEF,KAAK,CAAEG,MAAM,CAACE,OAFhB,GAKF,QACE,MAAOH,CAAAA,KAAP,CApEJ,CAsED,CAvED,CAyEA,cAAeD,CAAAA,QAAf","sourcesContent":["import {\n  GET_USERS_SUCCESS,\n  GET_USERS_FAIL,\n  ADD_USER_SUCCESS,\n  ADD_USER_FAIL,\n  UPDATE_USER_SUCCESS,\n  UPDATE_USER_FAIL,\n  DELETE_USER_SUCCESS,\n  DELETE_USER_FAIL,\n  GET_USER_PROFILE_SUCCESS,\n  GET_USER_PROFILE_FAIL,\n} from \"./actionTypes\"\n\nconst INIT_STATE = {\n  users: [],\n  userProfile: {},\n  error: {},\n}\n\nconst contacts = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case GET_USERS_SUCCESS:\n      return {\n        ...state,\n        users: action.payload,\n      }\n\n    case GET_USERS_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    case ADD_USER_SUCCESS:\n      return {\n        ...state,\n        users: [...state.users, action.payload],\n      }\n\n    case ADD_USER_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    case GET_USER_PROFILE_SUCCESS:\n      return {\n        ...state,\n        userProfile: action.payload,\n      }\n\n      case UPDATE_USER_SUCCESS:\n        return {\n          ...state,\n          users: state.users.map(user =>\n            user.id.toString() === action.payload.id.toString()\n              ? { user, ...action.payload }\n              : user\n          ),\n        }\n  \n      case UPDATE_USER_FAIL:\n        return {\n          ...state,\n          error: action.payload,\n        }\n  \n      case DELETE_USER_SUCCESS:\n        return {\n          ...state,\n          users: state.users.filter(\n            user => user.id.toString() !== action.payload.id.toString()\n          ),\n        }\n  \n      case DELETE_USER_FAIL:\n        return {\n          ...state,\n          error: action.payload,\n        }\n\n    case GET_USER_PROFILE_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default contacts\n"]},"metadata":{},"sourceType":"module"}
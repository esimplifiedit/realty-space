{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\"; // Crypto Redux States\n\nimport { GET_PROJECTS, GET_PROJECT_DETAIL, ADD_NEW_PROJECT, DELETE_PROJECT, UPDATE_PROJECT } from \"./actionTypes\";\nimport { getProjectsSuccess, getProjectsFail, getProjectDetailSuccess, getProjectDetailFail, addProjectFail, addProjectSuccess, updateProjectSuccess, updateProjectFail, deleteProjectSuccess, deleteProjectFail } from \"./actions\"; //Include Both Helper File with needed methods\n\nimport { getProjects, getProjectsDetails, addNewProject, updateProject, deleteProject } from \"helpers/fakebackend_helper\";\n\nfunction* fetchProjects() {\n  try {\n    const response = yield call(getProjects);\n    yield put(getProjectsSuccess(response));\n  } catch (error) {\n    yield put(getProjectsFail(error));\n  }\n}\n\nfunction* fetchProjectDetail({\n  projectId\n}) {\n  try {\n    const response = yield call(getProjectsDetails, projectId);\n    yield put(getProjectDetailSuccess(response));\n  } catch (error) {\n    yield put(getProjectDetailFail(error));\n  }\n}\n\nfunction* onUpdateProject({\n  payload: project\n}) {\n  try {\n    const response = yield call(updateProject, project);\n    yield put(updateProjectSuccess(response));\n  } catch (error) {\n    yield put(updateProjectFail(error));\n  }\n}\n\nfunction* onDeleteProject({\n  payload: project\n}) {\n  try {\n    const response = yield call(deleteProject, project);\n    yield put(deleteProjectSuccess(response));\n  } catch (error) {\n    yield put(deleteProjectFail(error));\n  }\n}\n\nfunction* onAddNewProject({\n  payload: project\n}) {\n  try {\n    const response = yield call(addNewProject, project);\n    yield put(addProjectSuccess(response));\n  } catch (error) {\n    yield put(addProjectFail(error));\n  }\n}\n\nfunction* projectsSaga() {\n  yield takeEvery(GET_PROJECTS, fetchProjects);\n  yield takeEvery(GET_PROJECT_DETAIL, fetchProjectDetail);\n  yield takeEvery(ADD_NEW_PROJECT, onAddNewProject);\n  yield takeEvery(UPDATE_PROJECT, onUpdateProject);\n  yield takeEvery(DELETE_PROJECT, onDeleteProject);\n}\n\nexport default projectsSaga;","map":{"version":3,"sources":["D:/localserver-php8/htdocs/react/realtyspace/src/store/projects/saga.js"],"names":["call","put","takeEvery","GET_PROJECTS","GET_PROJECT_DETAIL","ADD_NEW_PROJECT","DELETE_PROJECT","UPDATE_PROJECT","getProjectsSuccess","getProjectsFail","getProjectDetailSuccess","getProjectDetailFail","addProjectFail","addProjectSuccess","updateProjectSuccess","updateProjectFail","deleteProjectSuccess","deleteProjectFail","getProjects","getProjectsDetails","addNewProject","updateProject","deleteProject","fetchProjects","response","error","fetchProjectDetail","projectId","onUpdateProject","payload","project","onDeleteProject","onAddNewProject","projectsSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC,C,CAEA;;AACA,SAASC,YAAT,EAAuBC,kBAAvB,EAA2CC,eAA3C,EAA4DC,cAA5D,EAA4EC,cAA5E,QAAkG,eAAlG;AACA,SACEC,kBADF,EAEEC,eAFF,EAGEC,uBAHF,EAIEC,oBAJF,EAKEC,cALF,EAMEC,iBANF,EAOEC,oBAPF,EAQEC,iBARF,EASEC,oBATF,EAUEC,iBAVF,QAWO,WAXP,C,CAaA;;AACA,SAASC,WAAT,EAAsBC,kBAAtB,EAA0CC,aAA1C,EAAyDC,aAAzD,EAAwEC,aAAxE,QAA6F,4BAA7F;;AAEA,UAAUC,aAAV,GAA0B;AACxB,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMxB,IAAI,CAACkB,WAAD,CAA3B;AACA,UAAMjB,GAAG,CAACO,kBAAkB,CAACgB,QAAD,CAAnB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMxB,GAAG,CAACQ,eAAe,CAACgB,KAAD,CAAhB,CAAT;AACD;AACF;;AAED,UAAUC,kBAAV,CAA6B;AAAEC,EAAAA;AAAF,CAA7B,EAA4C;AAC1C,MAAI;AACF,UAAMH,QAAQ,GAAG,MAAMxB,IAAI,CAACmB,kBAAD,EAAqBQ,SAArB,CAA3B;AACA,UAAM1B,GAAG,CAACS,uBAAuB,CAACc,QAAD,CAAxB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMxB,GAAG,CAACU,oBAAoB,CAACc,KAAD,CAArB,CAAT;AACD;AACF;;AAED,UAAUG,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAEC;AAAX,CAA1B,EAAgD;AAC9C,MAAI;AACF,UAAMN,QAAQ,GAAG,MAAMxB,IAAI,CAACqB,aAAD,EAAgBS,OAAhB,CAA3B;AACA,UAAM7B,GAAG,CAACa,oBAAoB,CAACU,QAAD,CAArB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMxB,GAAG,CAACc,iBAAiB,CAACU,KAAD,CAAlB,CAAT;AACD;AACF;;AAED,UAAUM,eAAV,CAA0B;AAAEF,EAAAA,OAAO,EAAEC;AAAX,CAA1B,EAAgD;AAC9C,MAAI;AACF,UAAMN,QAAQ,GAAG,MAAMxB,IAAI,CAACsB,aAAD,EAAgBQ,OAAhB,CAA3B;AACA,UAAM7B,GAAG,CAACe,oBAAoB,CAACQ,QAAD,CAArB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMxB,GAAG,CAACgB,iBAAiB,CAACQ,KAAD,CAAlB,CAAT;AACD;AACF;;AAED,UAAUO,eAAV,CAA0B;AAAEH,EAAAA,OAAO,EAAEC;AAAX,CAA1B,EAAgD;AAC9C,MAAI;AACF,UAAMN,QAAQ,GAAG,MAAMxB,IAAI,CAACoB,aAAD,EAAgBU,OAAhB,CAA3B;AACA,UAAM7B,GAAG,CAACY,iBAAiB,CAACW,QAAD,CAAlB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AAEd,UAAMxB,GAAG,CAACW,cAAc,CAACa,KAAD,CAAf,CAAT;AACD;AACF;;AAED,UAAUQ,YAAV,GAAyB;AACvB,QAAM/B,SAAS,CAACC,YAAD,EAAeoB,aAAf,CAAf;AACA,QAAMrB,SAAS,CAACE,kBAAD,EAAqBsB,kBAArB,CAAf;AACA,QAAMxB,SAAS,CAACG,eAAD,EAAkB2B,eAAlB,CAAf;AACA,QAAM9B,SAAS,CAACK,cAAD,EAAiBqB,eAAjB,CAAf;AACA,QAAM1B,SAAS,CAACI,cAAD,EAAiByB,eAAjB,CAAf;AACD;;AAED,eAAeE,YAAf","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\"\n\n// Crypto Redux States\nimport { GET_PROJECTS, GET_PROJECT_DETAIL, ADD_NEW_PROJECT, DELETE_PROJECT, UPDATE_PROJECT } from \"./actionTypes\"\nimport {\n  getProjectsSuccess,\n  getProjectsFail,\n  getProjectDetailSuccess,\n  getProjectDetailFail,\n  addProjectFail,\n  addProjectSuccess,\n  updateProjectSuccess,\n  updateProjectFail,\n  deleteProjectSuccess,\n  deleteProjectFail,\n} from \"./actions\"\n\n//Include Both Helper File with needed methods\nimport { getProjects, getProjectsDetails, addNewProject, updateProject, deleteProject } from \"helpers/fakebackend_helper\"\n\nfunction* fetchProjects() {\n  try {\n    const response = yield call(getProjects)\n    yield put(getProjectsSuccess(response))\n  } catch (error) {\n    yield put(getProjectsFail(error))\n  }\n}\n\nfunction* fetchProjectDetail({ projectId }) {\n  try {\n    const response = yield call(getProjectsDetails, projectId)\n    yield put(getProjectDetailSuccess(response))\n  } catch (error) {\n    yield put(getProjectDetailFail(error))\n  }\n}\n\nfunction* onUpdateProject({ payload: project }) {\n  try {\n    const response = yield call(updateProject, project)\n    yield put(updateProjectSuccess(response))\n  } catch (error) {\n    yield put(updateProjectFail(error))\n  }\n}\n\nfunction* onDeleteProject({ payload: project }) {\n  try {\n    const response = yield call(deleteProject, project)\n    yield put(deleteProjectSuccess(response))\n  } catch (error) {\n    yield put(deleteProjectFail(error))\n  }\n}\n\nfunction* onAddNewProject({ payload: project }) {\n  try {\n    const response = yield call(addNewProject, project)\n    yield put(addProjectSuccess(response))\n  } catch (error) {\n\n    yield put(addProjectFail(error))\n  }\n}\n\nfunction* projectsSaga() {\n  yield takeEvery(GET_PROJECTS, fetchProjects)\n  yield takeEvery(GET_PROJECT_DETAIL, fetchProjectDetail)\n  yield takeEvery(ADD_NEW_PROJECT, onAddNewProject)\n  yield takeEvery(UPDATE_PROJECT, onUpdateProject)\n  yield takeEvery(DELETE_PROJECT, onDeleteProject)\n}\n\nexport default projectsSaga\n"]},"metadata":{},"sourceType":"module"}
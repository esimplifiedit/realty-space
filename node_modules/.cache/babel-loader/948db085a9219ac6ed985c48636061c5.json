{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\"; // Crypto Redux States\n\nimport { GET_USERS, GET_USER_PROFILE, ADD_NEW_USER, DELETE_USER, UPDATE_USER } from \"./actionTypes\";\nimport { getUsersSuccess, getUsersFail, getUserProfileSuccess, getUserProfileFail, addUserFail, addUserSuccess, updateUserSuccess, updateUserFail, deleteUserSuccess, deleteUserFail } from \"./actions\"; //Include Both Helper File with needed methods\n\nimport { getUsers, getUserProfile, addNewUser, updateUser, deleteUser } from \"../../helpers/fakebackend_helper\";\n\nfunction* fetchUsers() {\n  try {\n    const response = yield call(getUsers);\n    yield put(getUsersSuccess(response));\n  } catch (error) {\n    yield put(getUsersFail(error));\n  }\n}\n\nfunction* fetchUserProfile() {\n  try {\n    const response = yield call(getUserProfile);\n    yield put(getUserProfileSuccess(response));\n  } catch (error) {\n    yield put(getUserProfileFail(error));\n  }\n}\n\nfunction* onAddNewUser({\n  payload: user\n}) {\n  try {\n    const response = yield call(addNewUser, user);\n    yield put(addUserSuccess(response));\n  } catch (error) {\n    yield put(addUserFail(error));\n  }\n}\n\nfunction* onUpdateUser({\n  payload: user\n}) {\n  try {\n    const response = yield call(updateUser, user);\n    yield put(updateUserSuccess(response));\n  } catch (error) {\n    yield put(updateUserFail(error));\n  }\n}\n\nfunction* onDeleteUser({\n  payload: user\n}) {\n  try {\n    const response = yield call(deleteUser, user);\n    yield put(deleteUserSuccess(response));\n  } catch (error) {\n    yield put(deleteUserFail(error));\n  }\n}\n\nfunction* contactsSaga() {\n  yield takeEvery(GET_USERS, fetchUsers);\n  yield takeEvery(GET_USER_PROFILE, fetchUserProfile);\n  yield takeEvery(ADD_NEW_USER, onAddNewUser);\n  yield takeEvery(UPDATE_USER, onUpdateUser);\n  yield takeEvery(DELETE_USER, onDeleteUser);\n}\n\nexport default contactsSaga;","map":{"version":3,"sources":["D:/localserver-php8/htdocs/react/realtyspace/src/store/contacts/saga.js"],"names":["call","put","takeEvery","GET_USERS","GET_USER_PROFILE","ADD_NEW_USER","DELETE_USER","UPDATE_USER","getUsersSuccess","getUsersFail","getUserProfileSuccess","getUserProfileFail","addUserFail","addUserSuccess","updateUserSuccess","updateUserFail","deleteUserSuccess","deleteUserFail","getUsers","getUserProfile","addNewUser","updateUser","deleteUser","fetchUsers","response","error","fetchUserProfile","onAddNewUser","payload","user","onUpdateUser","onDeleteUser","contactsSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC,C,CAEA;;AACA,SACEC,SADF,EAEEC,gBAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,WALF,QAMO,eANP;AAQA,SACEC,eADF,EAEEC,YAFF,EAGEC,qBAHF,EAIEC,kBAJF,EAKEC,WALF,EAMEC,cANF,EAOEC,iBAPF,EAQEC,cARF,EASEC,iBATF,EAUEC,cAVF,QAWO,WAXP,C,CAaA;;AACA,SACEC,QADF,EAEEC,cAFF,EAGEC,UAHF,EAIEC,UAJF,EAKEC,UALF,QAMO,kCANP;;AAQA,UAAUC,UAAV,GAAuB;AACrB,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMxB,IAAI,CAACkB,QAAD,CAA3B;AACA,UAAMjB,GAAG,CAACO,eAAe,CAACgB,QAAD,CAAhB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMxB,GAAG,CAACQ,YAAY,CAACgB,KAAD,CAAb,CAAT;AACD;AACF;;AAED,UAAUC,gBAAV,GAA6B;AAC3B,MAAI;AACF,UAAMF,QAAQ,GAAG,MAAMxB,IAAI,CAACmB,cAAD,CAA3B;AACA,UAAMlB,GAAG,CAACS,qBAAqB,CAACc,QAAD,CAAtB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMxB,GAAG,CAACU,kBAAkB,CAACc,KAAD,CAAnB,CAAT;AACD;AACF;;AAED,UAAUE,YAAV,CAAuB;AAAEC,EAAAA,OAAO,EAAEC;AAAX,CAAvB,EAA0C;AACxC,MAAI;AACF,UAAML,QAAQ,GAAG,MAAMxB,IAAI,CAACoB,UAAD,EAAaS,IAAb,CAA3B;AACA,UAAM5B,GAAG,CAACY,cAAc,CAACW,QAAD,CAAf,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AAEd,UAAMxB,GAAG,CAACW,WAAW,CAACa,KAAD,CAAZ,CAAT;AACD;AACF;;AAED,UAAUK,YAAV,CAAuB;AAAEF,EAAAA,OAAO,EAAEC;AAAX,CAAvB,EAA0C;AACxC,MAAI;AACF,UAAML,QAAQ,GAAG,MAAMxB,IAAI,CAACqB,UAAD,EAAaQ,IAAb,CAA3B;AACA,UAAM5B,GAAG,CAACa,iBAAiB,CAACU,QAAD,CAAlB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMxB,GAAG,CAACc,cAAc,CAACU,KAAD,CAAf,CAAT;AACD;AACF;;AAED,UAAUM,YAAV,CAAuB;AAAEH,EAAAA,OAAO,EAAEC;AAAX,CAAvB,EAA0C;AACxC,MAAI;AACF,UAAML,QAAQ,GAAG,MAAMxB,IAAI,CAACsB,UAAD,EAAaO,IAAb,CAA3B;AACA,UAAM5B,GAAG,CAACe,iBAAiB,CAACQ,QAAD,CAAlB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMxB,GAAG,CAACgB,cAAc,CAACQ,KAAD,CAAf,CAAT;AACD;AACF;;AAED,UAAUO,YAAV,GAAyB;AACvB,QAAM9B,SAAS,CAACC,SAAD,EAAYoB,UAAZ,CAAf;AACA,QAAMrB,SAAS,CAACE,gBAAD,EAAmBsB,gBAAnB,CAAf;AACA,QAAMxB,SAAS,CAACG,YAAD,EAAesB,YAAf,CAAf;AACA,QAAMzB,SAAS,CAACK,WAAD,EAAcuB,YAAd,CAAf;AACA,QAAM5B,SAAS,CAACI,WAAD,EAAcyB,YAAd,CAAf;AACD;;AAED,eAAeC,YAAf","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\"\n\n// Crypto Redux States\nimport {\n  GET_USERS,\n  GET_USER_PROFILE,\n  ADD_NEW_USER,\n  DELETE_USER,\n  UPDATE_USER\n} from \"./actionTypes\"\n\nimport {\n  getUsersSuccess,\n  getUsersFail,\n  getUserProfileSuccess,\n  getUserProfileFail,\n  addUserFail,\n  addUserSuccess,\n  updateUserSuccess,\n  updateUserFail,\n  deleteUserSuccess,\n  deleteUserFail,\n} from \"./actions\"\n\n//Include Both Helper File with needed methods\nimport {\n  getUsers,\n  getUserProfile,\n  addNewUser,\n  updateUser,\n  deleteUser\n} from \"../../helpers/fakebackend_helper\"\n\nfunction* fetchUsers() {\n  try {\n    const response = yield call(getUsers)\n    yield put(getUsersSuccess(response))\n  } catch (error) {\n    yield put(getUsersFail(error))\n  }\n}\n\nfunction* fetchUserProfile() {\n  try {\n    const response = yield call(getUserProfile)\n    yield put(getUserProfileSuccess(response))\n  } catch (error) {\n    yield put(getUserProfileFail(error))\n  }\n}\n\nfunction* onAddNewUser({ payload: user }) {\n  try {\n    const response = yield call(addNewUser, user)\n    yield put(addUserSuccess(response))\n  } catch (error) {\n\n    yield put(addUserFail(error))\n  }\n}\n\nfunction* onUpdateUser({ payload: user }) {\n  try {\n    const response = yield call(updateUser, user)\n    yield put(updateUserSuccess(response))\n  } catch (error) {\n    yield put(updateUserFail(error))\n  }\n}\n\nfunction* onDeleteUser({ payload: user }) {\n  try {\n    const response = yield call(deleteUser, user)\n    yield put(deleteUserSuccess(response))\n  } catch (error) {\n    yield put(deleteUserFail(error))\n  }\n}\n\nfunction* contactsSaga() {\n  yield takeEvery(GET_USERS, fetchUsers)\n  yield takeEvery(GET_USER_PROFILE, fetchUserProfile)\n  yield takeEvery(ADD_NEW_USER, onAddNewUser)\n  yield takeEvery(UPDATE_USER, onUpdateUser)\n  yield takeEvery(DELETE_USER, onDeleteUser)\n}\n\nexport default contactsSaga\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { call, put, takeEvery, all, fork } from \"redux-saga/effects\"; // Crypto Redux States\n\nimport { GET_CHARTS_DATA } from \"./actionTypes\";\nimport { apiSuccess, apiFail } from \"./actions\"; //Include Both Helper File with needed methods\n\nimport { getWeeklyData, getYearlyData, getMonthlyData } from \"../../helpers/fakebackend_helper\";\n\nfunction* getChartsData({\n  payload: periodType\n}) {\n  try {\n    var response;\n\n    if (periodType == \"monthly\") {\n      response = yield call(getWeeklyData, periodType);\n    }\n\n    if (periodType == \"yearly\") {\n      response = yield call(getYearlyData, periodType);\n    }\n\n    if (periodType == \"weekly\") {\n      response = yield call(getMonthlyData, periodType);\n    }\n\n    yield put(apiSuccess(GET_CHARTS_DATA, response));\n  } catch (error) {\n    yield put(apiFail(GET_CHARTS_DATA, error));\n  }\n}\n\nexport function* watchGetChartsData() {\n  yield takeEvery(GET_CHARTS_DATA, getChartsData);\n}\n\nfunction* dashboardSaga() {\n  yield all([fork(watchGetChartsData)]);\n}\n\nexport default dashboardSaga;","map":{"version":3,"sources":["D:/localserver-php8/htdocs/react/realtyspace/src/store/dashboard/saga.js"],"names":["call","put","takeEvery","all","fork","GET_CHARTS_DATA","apiSuccess","apiFail","getWeeklyData","getYearlyData","getMonthlyData","getChartsData","payload","periodType","response","error","watchGetChartsData","dashboardSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,EAA+BC,GAA/B,EAAoCC,IAApC,QAAgD,oBAAhD,C,CAEA;;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,WAApC,C,CAEA;;AACA,SACIC,aADJ,EAEIC,aAFJ,EAGIC,cAHJ,QAKS,kCALT;;AAOA,UAAUC,aAAV,CAAwB;AAAEC,EAAAA,OAAO,EAAEC;AAAX,CAAxB,EAAiD;AAC7C,MAAI;AACA,QAAIC,QAAJ;;AACA,QAAID,UAAU,IAAI,SAAlB,EAA6B;AACzBC,MAAAA,QAAQ,GAAG,MAAMd,IAAI,CAACQ,aAAD,EAAgBK,UAAhB,CAArB;AACH;;AACD,QAAIA,UAAU,IAAI,QAAlB,EAA4B;AACxBC,MAAAA,QAAQ,GAAG,MAAMd,IAAI,CAACS,aAAD,EAAgBI,UAAhB,CAArB;AACH;;AACD,QAAIA,UAAU,IAAI,QAAlB,EAA4B;AACxBC,MAAAA,QAAQ,GAAG,MAAMd,IAAI,CAACU,cAAD,EAAiBG,UAAjB,CAArB;AACH;;AAED,UAAMZ,GAAG,CAACK,UAAU,CAACD,eAAD,EAAkBS,QAAlB,CAAX,CAAT;AACH,GAbD,CAaE,OAAOC,KAAP,EAAc;AACZ,UAAMd,GAAG,CAACM,OAAO,CAACF,eAAD,EAAkBU,KAAlB,CAAR,CAAT;AACH;AACJ;;AAGD,OAAO,UAAUC,kBAAV,GAA+B;AAClC,QAAMd,SAAS,CAACG,eAAD,EAAkBM,aAAlB,CAAf;AACH;;AAED,UAAUM,aAAV,GAA0B;AACtB,QAAMd,GAAG,CAAC,CAACC,IAAI,CAACY,kBAAD,CAAL,CAAD,CAAT;AACH;;AAED,eAAeC,aAAf","sourcesContent":["import { call, put, takeEvery, all, fork } from \"redux-saga/effects\";\n\n// Crypto Redux States\nimport { GET_CHARTS_DATA } from \"./actionTypes\";\nimport { apiSuccess, apiFail } from \"./actions\";\n\n//Include Both Helper File with needed methods\nimport {\n    getWeeklyData,\n    getYearlyData,\n    getMonthlyData,\n}\n    from \"../../helpers/fakebackend_helper\";\n\nfunction* getChartsData({ payload: periodType }) {\n    try {\n        var response;\n        if (periodType == \"monthly\") {\n            response = yield call(getWeeklyData, periodType);\n        }\n        if (periodType == \"yearly\") {\n            response = yield call(getYearlyData, periodType);\n        }\n        if (periodType == \"weekly\") {\n            response = yield call(getMonthlyData, periodType);\n        }\n\n        yield put(apiSuccess(GET_CHARTS_DATA, response));\n    } catch (error) {\n        yield put(apiFail(GET_CHARTS_DATA, error));\n    }\n}\n\n\nexport function* watchGetChartsData() {\n    yield takeEvery(GET_CHARTS_DATA, getChartsData);\n}\n\nfunction* dashboardSaga() {\n    yield all([fork(watchGetChartsData)]);\n}\n\nexport default dashboardSaga;\n"]},"metadata":{},"sourceType":"module"}
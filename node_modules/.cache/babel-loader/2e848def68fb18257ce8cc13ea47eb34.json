{"ast":null,"code":"var _jsxFileName = \"D:\\\\localserver-php8\\\\htdocs\\\\react\\\\realtyspace\\\\src\\\\pages\\\\Dashboard\\\\Lead.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { isEmpty } from \"lodash\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, { PaginationListStandalone, PaginationProvider } from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport { Button, Card, CardBody, Col, Row, Badge } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LatestLeads = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    leads\n  } = useSelector(state => ({\n    leads: state.leads.orders\n  }));\n  useEffect(() => {\n    dispatch(onGetOrders());\n  }, [dispatch]);\n  const selectRow = {\n    mode: \"checkbox\"\n  };\n  const [modal, setModal] = useState(false);\n  const [modal1, setModal1] = useState(false);\n  const [orderList, setOrderList] = useState([]);\n  const [isEdit, setIsEdit] = useState(false); //pagination customization\n\n  const pageOptions = {\n    sizePerPage: 6,\n    totalSize: orders.length,\n    // replace later with size(orders),\n    custom: true\n  };\n  const {\n    SearchBar\n  } = Search; // const toggleModal = () => {\n  //   setModal1(!modal1)\n  // }\n\n  const toggleViewModal = () => setModal1(!modal1);\n\n  const EcommerceOrderColumns = toggleModal => [{\n    dataField: \"orderId\",\n    text: \"Order ID\",\n    sort: true,\n    // eslint-disable-next-line react/display-name\n    formatter: (cellContent, row) => /*#__PURE__*/_jsxDEV(Link, {\n      to: \"#\",\n      className: \"text-body fw-bold\",\n      children: row.orderId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this)\n  }, {\n    dataField: \"billingName\",\n    text: \"Billing Name\",\n    sort: true\n  }, {\n    dataField: \"orderdate\",\n    text: \"Date\",\n    sort: true\n  }, {\n    dataField: \"total\",\n    text: \"Total\",\n    sort: true\n  }, {\n    dataField: \"paymentStatus\",\n    text: \"Payment Status\",\n    sort: true,\n    // eslint-disable-next-line react/display-name\n    formatter: (cellContent, row) => /*#__PURE__*/_jsxDEV(Badge, {\n      className: \"font-size-12 badge-soft-\" + row.badgeclass,\n      color: row.badgeClass,\n      pill: true,\n      children: row.paymentStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this)\n  }, {\n    dataField: \"paymentMethod\",\n    isDummyField: true,\n    text: \"Payment Method\",\n    sort: true,\n    // eslint-disable-next-line react/display-name\n    formatter: (cellContent, row) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: row.paymentMethod !== \"COD\" ? \"fab fa-cc-\" + toLowerCase1(row.paymentMethod) + \" me-1\" : \"fab fas fa-money-bill-alt me-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), \" \", row.paymentMethod]\n    }, void 0, true)\n  }, {\n    dataField: \"view\",\n    isDummyField: true,\n    text: \"View Details\",\n    sort: true,\n    // eslint-disable-next-line react/display-name\n    formatter: () => /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      color: \"primary\",\n      className: \"btn-sm btn-rounded\",\n      onClick: toggleViewModal,\n      children: \"View Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }, this)\n  }];\n\n  useEffect(() => {\n    if (orders && !orders.length) {\n      onGetOrders();\n    }\n  }, [onGetOrders, orders]);\n  useEffect(() => {\n    setOrderList(orders);\n  }, [orders]);\n  useEffect(() => {\n    if (!isEmpty(orders) && !!isEdit) {\n      setOrderList(orders);\n      setIsEdit(false);\n    }\n  }, [orders]);\n\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n  const toLowerCase1 = str => {\n    return str.toLowerCase();\n  };\n\n  const defaultSorted = [{\n    dataField: \"orderId\",\n    order: \"desc\"\n  }];\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EcommerceOrdersModal, {\n      isOpen: modal1,\n      toggle: toggleViewModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 h4 card-title\",\n          children: \"Latest Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PaginationProvider, {\n          pagination: paginationFactory(pageOptions),\n          keyField: \"id\",\n          columns: EcommerceOrderColumns(toggle),\n          data: orders,\n          children: ({\n            paginationProps,\n            paginationTableProps\n          }) => /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n            keyField: \"id\",\n            data: orders,\n            columns: EcommerceOrderColumns(toggle),\n            bootstrap4: true,\n            search: true,\n            children: toolkitProps => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  xl: \"12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"table-responsive\",\n                    children: /*#__PURE__*/_jsxDEV(BootstrapTable, {\n                      keyField: \"id\",\n                      responsive: true,\n                      bordered: false,\n                      striped: false,\n                      defaultSorted: defaultSorted,\n                      selectRow: selectRow,\n                      classes: \"table align-middle table-nowrap table-check\",\n                      headerWrapperClasses: \"table-light\",\n                      ...toolkitProps.baseProps,\n                      ...paginationTableProps\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pagination pagination-rounded justify-content-end\",\n                children: /*#__PURE__*/_jsxDEV(PaginationListStandalone, { ...paginationProps\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 7\n  }, this);\n};\n\n_s(LatestLeads, \"2u+D4eY38JJcZ9aHt+GF9fDnoJM=\", true);\n\n_c = LatestLeads;\n\nvar _c;\n\n$RefreshReg$(_c, \"LatestLeads\");","map":{"version":3,"sources":["D:/localserver-php8/htdocs/react/realtyspace/src/pages/Dashboard/Lead.js"],"names":["React","useEffect","useState","PropTypes","withRouter","Link","isEmpty","BootstrapTable","paginationFactory","PaginationListStandalone","PaginationProvider","ToolkitProvider","Search","Button","Card","CardBody","Col","Row","Badge","LatestLeads","props","dispatch","useDispatch","leads","useSelector","state","orders","onGetOrders","selectRow","mode","modal","setModal","modal1","setModal1","orderList","setOrderList","isEdit","setIsEdit","pageOptions","sizePerPage","totalSize","length","custom","SearchBar","toggleViewModal","EcommerceOrderColumns","toggleModal","dataField","text","sort","formatter","cellContent","row","orderId","badgeclass","badgeClass","paymentStatus","isDummyField","paymentMethod","toLowerCase1","toggle","str","toLowerCase","defaultSorted","order","paginationProps","paginationTableProps","toolkitProps","baseProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { withRouter, Link } from \"react-router-dom\"\r\nimport { isEmpty } from \"lodash\"\r\nimport BootstrapTable from \"react-bootstrap-table-next\"\r\nimport paginationFactory, {\r\n  PaginationListStandalone,\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\"\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\"\r\n\r\nimport { Button, Card, CardBody, Col, Row, Badge } from \"reactstrap\"\r\n\r\n\r\nconst LatestLeads = props => {\r\n    const dispatch = useDispatch()\r\n  \r\n    const { leads } = useSelector(state => ({\r\n        leads: state.leads.orders,\r\n    }))\r\n  \r\n    useEffect(() => {\r\n      dispatch(onGetOrders())\r\n    }, [dispatch]);\r\n  \r\n    const selectRow = {\r\n      mode: \"checkbox\",\r\n    }\r\n  \r\n    const [modal, setModal] = useState(false)\r\n    const [modal1, setModal1] = useState(false)\r\n    const [orderList, setOrderList] = useState([])\r\n    const [isEdit, setIsEdit] = useState(false)\r\n  \r\n    //pagination customization\r\n    const pageOptions = {\r\n      sizePerPage: 6,\r\n      totalSize: orders.length, // replace later with size(orders),\r\n      custom: true,\r\n    }\r\n    const { SearchBar } = Search\r\n  \r\n    // const toggleModal = () => {\r\n    //   setModal1(!modal1)\r\n    // }\r\n    const toggleViewModal = () => setModal1(!modal1)\r\n  \r\n    const EcommerceOrderColumns = toggleModal => [\r\n      {\r\n        dataField: \"orderId\",\r\n        text: \"Order ID\",\r\n        sort: true,\r\n        // eslint-disable-next-line react/display-name\r\n        formatter: (cellContent, row) => (\r\n          <Link to=\"#\" className=\"text-body fw-bold\">\r\n            {row.orderId}\r\n          </Link>\r\n        ),\r\n      },\r\n      {\r\n        dataField: \"billingName\",\r\n        text: \"Billing Name\",\r\n        sort: true,\r\n      },\r\n      {\r\n        dataField: \"orderdate\",\r\n        text: \"Date\",\r\n        sort: true,\r\n      },\r\n      {\r\n        dataField: \"total\",\r\n        text: \"Total\",\r\n        sort: true,\r\n      },\r\n      {\r\n        dataField: \"paymentStatus\",\r\n        text: \"Payment Status\",\r\n        sort: true,\r\n        // eslint-disable-next-line react/display-name\r\n        formatter: (cellContent, row) => (\r\n          <Badge\r\n            className={\"font-size-12 badge-soft-\" + row.badgeclass}\r\n            color={row.badgeClass}\r\n            pill\r\n          >\r\n            {row.paymentStatus}\r\n          </Badge>\r\n        ),\r\n      },\r\n      {\r\n        dataField: \"paymentMethod\",\r\n        isDummyField: true,\r\n        text: \"Payment Method\",\r\n        sort: true,\r\n        // eslint-disable-next-line react/display-name\r\n        formatter: (cellContent, row) => (\r\n          <>\r\n            <i\r\n              className={\r\n                row.paymentMethod !== \"COD\"\r\n                  ? \"fab fa-cc-\" + toLowerCase1(row.paymentMethod) + \" me-1\"\r\n                  : \"fab fas fa-money-bill-alt me-1\"\r\n              }\r\n            />{\" \"}\r\n            {row.paymentMethod}\r\n          </>\r\n        ),\r\n      },\r\n      {\r\n        dataField: \"view\",\r\n        isDummyField: true,\r\n        text: \"View Details\",\r\n        sort: true,\r\n        // eslint-disable-next-line react/display-name\r\n        formatter: () => (\r\n          <Button\r\n            type=\"button\"\r\n            color=\"primary\"\r\n            className=\"btn-sm btn-rounded\"\r\n            onClick={toggleViewModal}\r\n          >\r\n            View Details\r\n          </Button>\r\n        ),\r\n      },\r\n    ]\r\n  \r\n    useEffect(() => {\r\n      if (orders && !orders.length) {\r\n        onGetOrders()\r\n      }\r\n    }, [onGetOrders, orders])\r\n  \r\n    useEffect(() => {\r\n      setOrderList(orders)\r\n    }, [orders])\r\n  \r\n    useEffect(() => {\r\n      if (!isEmpty(orders) && !!isEdit) {\r\n        setOrderList(orders)\r\n        setIsEdit(false)\r\n      }\r\n    }, [orders])\r\n  \r\n    const toggle = () => {\r\n      setModal(!modal)\r\n    }\r\n  \r\n    const toLowerCase1 = str => {\r\n      return str.toLowerCase()\r\n    }\r\n  \r\n    const defaultSorted = [\r\n      {\r\n        dataField: \"orderId\",\r\n        order: \"desc\",\r\n      },\r\n    ]\r\n  \r\n    return (\r\n      <React.Fragment>\r\n        <EcommerceOrdersModal isOpen={modal1} toggle={toggleViewModal} />\r\n        <Card>\r\n          <CardBody>\r\n            <div className=\"mb-4 h4 card-title\">Latest Transaction</div>\r\n            <PaginationProvider\r\n              pagination={paginationFactory(pageOptions)}\r\n              keyField=\"id\"\r\n              columns={EcommerceOrderColumns(toggle)}\r\n              data={orders}\r\n            >\r\n              {({ paginationProps, paginationTableProps }) => (\r\n                <ToolkitProvider\r\n                  keyField=\"id\"\r\n                  data={orders}\r\n                  columns={EcommerceOrderColumns(toggle)}\r\n                  bootstrap4\r\n                  search\r\n                >\r\n                  {toolkitProps => (\r\n                    <React.Fragment>\r\n                      <Row>\r\n                        <Col xl=\"12\">\r\n                          <div className=\"table-responsive\">\r\n                            <BootstrapTable\r\n                              keyField=\"id\"\r\n                              responsive\r\n                              bordered={false}\r\n                              striped={false}\r\n                              defaultSorted={defaultSorted}\r\n                              selectRow={selectRow}\r\n                              classes={\r\n                                \"table align-middle table-nowrap table-check\"\r\n                              }\r\n                              headerWrapperClasses={\"table-light\"}\r\n                              {...toolkitProps.baseProps}\r\n                              {...paginationTableProps}\r\n                            />\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                      <div className=\"pagination pagination-rounded justify-content-end\">\r\n                        <PaginationListStandalone {...paginationProps} />\r\n                      </div>\r\n                    </React.Fragment>\r\n                  )}\r\n                </ToolkitProvider>\r\n              )}\r\n            </PaginationProvider>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }"]},"metadata":{},"sourceType":"module"}
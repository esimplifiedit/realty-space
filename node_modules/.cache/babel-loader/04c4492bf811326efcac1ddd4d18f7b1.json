{"ast":null,"code":"import _regeneratorRuntime from\"D:/localserver-php8/htdocs/react/realtyspace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(forgetUser),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(forgetPasswordSaga);import{takeEvery,put,call}from\"redux-saga/effects\";// Login Redux States\nimport{FORGET_PASSWORD}from\"./actionTypes\";import{userForgetPasswordSuccess,userForgetPasswordError}from\"./actions\";//Include Both Helper File with needed methods\nimport{getFirebaseBackend}from\"../../../helpers/firebase_helper\";import{postFakeForgetPwd,postJwtForgetPwd}from\"../../../helpers/fakebackend_helper\";var fireBaseBackend=getFirebaseBackend();//If user is send successfully send mail link then dispatch redux action's are directly from here.\nfunction forgetUser(_ref){var _ref$payload,user,history,response,_response,_response2;return _regeneratorRuntime.wrap(function forgetUser$(_context){while(1){switch(_context.prev=_context.next){case 0:_ref$payload=_ref.payload,user=_ref$payload.user,history=_ref$payload.history;_context.prev=1;if(!(process.env.REACT_APP_DEFAULTAUTH===\"firebase\")){_context.next=11;break;}_context.next=5;return call(fireBaseBackend.forgetPassword,user.email);case 5:response=_context.sent;if(!response){_context.next=9;break;}_context.next=9;return put(userForgetPasswordSuccess(\"Reset link are sended to your mailbox, check there first\"));case 9:_context.next=26;break;case 11:if(!(process.env.REACT_APP_DEFAULTAUTH===\"jwt\")){_context.next=20;break;}_context.next=14;return call(postJwtForgetPwd,{email:user.email});case 14:_response=_context.sent;if(!_response){_context.next=18;break;}_context.next=18;return put(userForgetPasswordSuccess(\"Reset link are sended to your mailbox, check there first\"));case 18:_context.next=26;break;case 20:_context.next=22;return call(postFakeForgetPwd,{email:user.email});case 22:_response2=_context.sent;if(!_response2){_context.next=26;break;}_context.next=26;return put(userForgetPasswordSuccess(\"Reset link are sended to your mailbox, check there first\"));case 26:_context.next=32;break;case 28:_context.prev=28;_context.t0=_context[\"catch\"](1);_context.next=32;return put(userForgetPasswordError(_context.t0));case 32:case\"end\":return _context.stop();}}},_marked,null,[[1,28]]);}function forgetPasswordSaga(){return _regeneratorRuntime.wrap(function forgetPasswordSaga$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeEvery(FORGET_PASSWORD,forgetUser);case 2:case\"end\":return _context2.stop();}}},_marked2);}export default forgetPasswordSaga;","map":{"version":3,"sources":["D:/localserver-php8/htdocs/react/realtyspace/src/store/auth/forgetpwd/saga.js"],"names":["forgetUser","forgetPasswordSaga","takeEvery","put","call","FORGET_PASSWORD","userForgetPasswordSuccess","userForgetPasswordError","getFirebaseBackend","postFakeForgetPwd","postJwtForgetPwd","fireBaseBackend","payload","user","history","process","env","REACT_APP_DEFAULTAUTH","forgetPassword","email","response"],"mappings":"4MAgBUA,U,iDAmCAC,kB,EAnDV,OAASC,SAAT,CAAoBC,GAApB,CAAyBC,IAAzB,KAAqC,oBAArC,CAEA;AACA,OAASC,eAAT,KAAgC,eAAhC,CACA,OAASC,yBAAT,CAAoCC,uBAApC,KAAmE,WAAnE,CAEA;AACA,OAASC,kBAAT,KAAmC,kCAAnC,CACA,OACEC,iBADF,CAEEC,gBAFF,KAGO,qCAHP,CAKA,GAAMC,CAAAA,eAAe,CAAGH,kBAAkB,EAA1C,CAEA;AACA,QAAUR,CAAAA,UAAV,wMAAuBY,OAAvB,CAAkCC,IAAlC,cAAkCA,IAAlC,CAAwCC,OAAxC,cAAwCA,OAAxC,sBAEQC,OAAO,CAACC,GAAR,CAAYC,qBAAZ,GAAsC,UAF9C,2CAGuB,MAAMb,CAAAA,IAAI,CAACO,eAAe,CAACO,cAAjB,CAAiCL,IAAI,CAACM,KAAtC,CAAV,CAHvB,OAGYC,QAHZ,mBAIUA,QAJV,yCAKQ,MAAMjB,CAAAA,GAAG,CACPG,yBAAyB,CACvB,0DADuB,CADlB,CAAT,CALR,2CAWeS,OAAO,CAACC,GAAR,CAAYC,qBAAZ,GAAsC,KAXrD,4CAYuB,MAAMb,CAAAA,IAAI,CAACM,gBAAD,CAAmB,CAAES,KAAK,CAAEN,IAAI,CAACM,KAAd,CAAnB,CAAV,CAZvB,QAYYC,SAZZ,mBAaUA,SAbV,2CAcQ,MAAMjB,CAAAA,GAAG,CACPG,yBAAyB,CACvB,0DADuB,CADlB,CAAT,CAdR,wDAqBuB,MAAMF,CAAAA,IAAI,CAACK,iBAAD,CAAoB,CAAEU,KAAK,CAAEN,IAAI,CAACM,KAAd,CAApB,CAAV,CArBvB,QAqBYC,UArBZ,mBAsBUA,UAtBV,2CAuBQ,MAAMjB,CAAAA,GAAG,CACPG,yBAAyB,CACvB,0DADuB,CADlB,CAAT,CAvBR,0GA+BI,MAAMH,CAAAA,GAAG,CAACI,uBAAuB,aAAxB,CAAT,CA/BJ,qEAmCA,QAAUN,CAAAA,kBAAV,kJACE,MAAMC,CAAAA,SAAS,CAACG,eAAD,CAAkBL,UAAlB,CAAf,CADF,wDAIA,cAAeC,CAAAA,kBAAf","sourcesContent":["import { takeEvery, put, call } from \"redux-saga/effects\"\n\n// Login Redux States\nimport { FORGET_PASSWORD } from \"./actionTypes\"\nimport { userForgetPasswordSuccess, userForgetPasswordError } from \"./actions\"\n\n//Include Both Helper File with needed methods\nimport { getFirebaseBackend } from \"../../../helpers/firebase_helper\"\nimport {\n  postFakeForgetPwd,\n  postJwtForgetPwd,\n} from \"../../../helpers/fakebackend_helper\"\n\nconst fireBaseBackend = getFirebaseBackend()\n\n//If user is send successfully send mail link then dispatch redux action's are directly from here.\nfunction* forgetUser({ payload: { user, history } }) {\n  try {\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\n      const response = yield call(fireBaseBackend.forgetPassword, user.email)\n      if (response) {\n        yield put(\n          userForgetPasswordSuccess(\n            \"Reset link are sended to your mailbox, check there first\"\n          )\n        )\n      }\n    } else if (process.env.REACT_APP_DEFAULTAUTH === \"jwt\") {\n      const response = yield call(postJwtForgetPwd, { email: user.email })\n      if (response) {\n        yield put(\n          userForgetPasswordSuccess(\n            \"Reset link are sended to your mailbox, check there first\"\n          )\n        )\n      }\n    } else {\n      const response = yield call(postFakeForgetPwd, { email: user.email })\n      if (response) {\n        yield put(\n          userForgetPasswordSuccess(\n            \"Reset link are sended to your mailbox, check there first\"\n          )\n        )\n      }\n    }\n  } catch (error) {\n    yield put(userForgetPasswordError(error))\n  }\n}\n\nfunction* forgetPasswordSaga() {\n  yield takeEvery(FORGET_PASSWORD, forgetUser)\n}\n\nexport default forgetPasswordSaga\n"]},"metadata":{},"sourceType":"module"}
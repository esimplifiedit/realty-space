{"ast":null,"code":"import axios from \"axios\";\nimport { del, get, post, put } from \"./api_helper\";\nimport * as url from \"./url_helper\"; // Gets the logged in user data from local session\n\nconst getLoggedInUser = () => {\n  const user = localStorage.getItem(\"user\");\n  if (user) return JSON.parse(user);\n  return null;\n}; //is user is logged in\n\n\nconst isUserAuthenticated = () => {\n  return getLoggedInUser() !== null;\n}; // Register Method\n\n\nconst postFakeRegister = data => {\n  return axios.post(url.POST_FAKE_REGISTER, data).then(response => {\n    if (response.status >= 200 || response.status <= 299) return response.data;\n    throw response.data;\n  }).catch(err => {\n    let message;\n\n    if (err.response && err.response.status) {\n      switch (err.response.status) {\n        case 404:\n          message = \"Sorry! the page you are looking for could not be found\";\n          break;\n\n        case 500:\n          message = \"Sorry! something went wrong, please contact our support team\";\n          break;\n\n        case 401:\n          message = \"Invalid credentials\";\n          break;\n\n        default:\n          message = err[1];\n          break;\n      }\n    }\n\n    throw message;\n  });\n}; // Login Method\n\n\nconst postFakeLogin = data => post(url.POST_FAKE_LOGIN, data); // postForgetPwd\n\n\nconst postFakeForgetPwd = data => post(url.POST_FAKE_PASSWORD_FORGET, data); // Edit profile\n\n\nconst postJwtProfile = data => post(url.POST_EDIT_JWT_PROFILE, data);\n\nconst postFakeProfile = data => post(url.POST_EDIT_PROFILE, data); // Register Method\n\n\nconst postJwtRegister = (url, data) => {\n  return axios.post(url, data).then(response => {\n    if (response.status >= 200 || response.status <= 299) return response.data;\n    throw response.data;\n  }).catch(err => {\n    var message;\n\n    if (err.response && err.response.status) {\n      switch (err.response.status) {\n        case 404:\n          message = \"Sorry! the page you are looking for could not be found\";\n          break;\n\n        case 500:\n          message = \"Sorry! something went wrong, please contact our support team\";\n          break;\n\n        case 401:\n          message = \"Invalid credentials\";\n          break;\n\n        default:\n          message = err[1];\n          break;\n      }\n    }\n\n    throw message;\n  });\n}; // Login Method\n\n\nconst postJwtLogin = data => post(url.POST_FAKE_JWT_LOGIN, data); // postForgetPwd\n\n\nconst postJwtForgetPwd = data => post(url.POST_FAKE_JWT_PASSWORD_FORGET, data); // postSocialLogin\n\n\nexport const postSocialLogin = data => post(url.SOCIAL_LOGIN, data); // get Products\n\nexport const getProducts = () => get(url.GET_PRODUCTS); // get Product detail\n\nexport const getProductDetail = id => get(`${url.GET_PRODUCTS_DETAIL}/${id}`, {\n  params: {\n    id\n  }\n}); // get Events\n\nexport const getEvents = () => get(url.GET_EVENTS); // add Events\n\nexport const addNewEvent = event => post(url.ADD_NEW_EVENT, event); // update Event\n\nexport const updateEvent = event => put(url.UPDATE_EVENT, event); // delete Event\n\nexport const deleteEvent = event => del(url.DELETE_EVENT, {\n  headers: {\n    event\n  }\n}); // get Categories\n\nexport const getCategories = () => get(url.GET_CATEGORIES); // get chats\n\nexport const getChats = () => get(url.GET_CHATS); // get groups\n\nexport const getGroups = () => get(url.GET_GROUPS); // get Contacts\n\nexport const getContacts = () => get(url.GET_CONTACTS); // get messages\n\nexport const getMessages = (roomId = \"\") => get(`${url.GET_MESSAGES}/${roomId}`, {\n  params: {\n    roomId\n  }\n}); // post messages\n\nexport const addMessage = message => post(url.ADD_MESSAGE, message); // get orders\n\nexport const getOrders = () => get(url.GET_ORDERS); // add order\n\nexport const addNewOrder = order => post(url.ADD_NEW_ORDER, order); // update order\n\nexport const updateOrder = order => put(url.UPDATE_ORDER, order); // delete order\n\nexport const deleteOrder = order => del(url.DELETE_ORDER, {\n  headers: {\n    order\n  }\n}); // get cart data\n\nexport const getCartData = () => get(url.GET_CART_DATA); // get customers\n\nexport const getCustomers = () => get(url.GET_CUSTOMERS); // add customer\n\nexport const addNewCustomer = customer => post(url.ADD_NEW_CUSTOMER, customer); // update customer\n\nexport const updateCustomer = customer => put(url.UPDATE_CUSTOMER, customer); // delete customer\n\nexport const deleteCustomer = customer => del(url.DELETE_CUSTOMER, {\n  headers: {\n    customer\n  }\n}); // get shops\n\nexport const getShops = () => get(url.GET_SHOPS); // get wallet\n\nexport const getWallet = () => get(url.GET_WALLET); // get crypto order\n\nexport const getCryptoOrder = () => get(url.GET_CRYPTO_ORDERS); // get invoices\n\nexport const getInvoices = () => get(url.GET_INVOICES); // get invoice details\n\nexport const getInvoiceDetail = id => get(`${url.GET_INVOICE_DETAIL}/${id}`, {\n  params: {\n    id\n  }\n}); // get project\n\nexport const getProjects = () => get(url.GET_PROJECTS); // get project details\n\nexport const getProjectsDetails = id => get(`${url.GET_PROJECT_DETAIL}/${id}`, {\n  params: {\n    id\n  }\n}); // add project\n\nexport const addNewProject = project => post(url.ADD_NEW_PROJECT, project); // update project\n\nexport const updateProject = project => put(url.UPDATE_PROJECT, project); // delete project\n\nexport const deleteProject = project => del(url.DELETE_PROJECT, {\n  headers: {\n    project\n  }\n}); // get tasks\n\nexport const getTasks = () => get(url.GET_TASKS); // get contacts\n\nexport const getUsers = () => get(url.GET_USERS); // add user\n\nexport const addNewUser = user => post(url.ADD_NEW_USER, user); // update user\n\nexport const updateUser = user => put(url.UPDATE_USER, user); // delete user\n\nexport const deleteUser = user => del(url.DELETE_USER, {\n  headers: {\n    user\n  }\n});\nexport const getUserProfile = () => get(url.GET_USER_PROFILE); // get inboxmail\n\nexport const getInboxMails = () => get(url.GET_INBOX_MAILS); // add inboxmail\n\nexport const addNewInboxMail = inboxmail => post(url.ADD_NEW_INBOX_MAIL, inboxmail); // delete inboxmail\n\nexport const deleteInboxMail = inboxmail => del(url.DELETE_INBOX_MAIL, {\n  headers: {\n    inboxmail\n  }\n}); // get starredmail\n\nexport const getStarredMails = () => get(url.GET_STARRED_MAILS); // get importantmail\n\nexport const getImportantMails = () => get(url.GET_IMPORTANT_MAILS); // get sent mail\n\nexport const getSentMails = () => get(url.GET_SENT_MAILS); // get trash mail\n\nexport const getTrashMails = () => get(url.GET_TRASH_MAILS); // get starredmail\n\nexport const getDraftMails = () => get(url.GET_DRAFT_MAILS); // get dashboard charts data\n\nexport const getWeeklyData = () => get(url.GET_WEEKLY_DATA);\nexport const getYearlyData = () => get(url.GET_YEARLY_DATA);\nexport const getMonthlyData = () => get(url.GET_MONTHLY_DATA);\nexport const topSellingData = month => get(`${url.TOP_SELLING_DATA}/${month}`, {\n  params: {\n    month\n  }\n});\nexport const getEarningChartsData = month => get(`${url.GET_EARNING_DATA}/${month}`, {\n  params: {\n    month\n  }\n});\nexport { getLoggedInUser, isUserAuthenticated, postFakeRegister, postFakeLogin, postFakeProfile, postFakeForgetPwd, postJwtRegister, postJwtLogin, postJwtForgetPwd, postJwtProfile };","map":{"version":3,"sources":["D:/localserver-php8/htdocs/react/realtyspace/src/helpers/fakebackend_helper.js"],"names":["axios","del","get","post","put","url","getLoggedInUser","user","localStorage","getItem","JSON","parse","isUserAuthenticated","postFakeRegister","data","POST_FAKE_REGISTER","then","response","status","catch","err","message","postFakeLogin","POST_FAKE_LOGIN","postFakeForgetPwd","POST_FAKE_PASSWORD_FORGET","postJwtProfile","POST_EDIT_JWT_PROFILE","postFakeProfile","POST_EDIT_PROFILE","postJwtRegister","postJwtLogin","POST_FAKE_JWT_LOGIN","postJwtForgetPwd","POST_FAKE_JWT_PASSWORD_FORGET","postSocialLogin","SOCIAL_LOGIN","getProducts","GET_PRODUCTS","getProductDetail","id","GET_PRODUCTS_DETAIL","params","getEvents","GET_EVENTS","addNewEvent","event","ADD_NEW_EVENT","updateEvent","UPDATE_EVENT","deleteEvent","DELETE_EVENT","headers","getCategories","GET_CATEGORIES","getChats","GET_CHATS","getGroups","GET_GROUPS","getContacts","GET_CONTACTS","getMessages","roomId","GET_MESSAGES","addMessage","ADD_MESSAGE","getOrders","GET_ORDERS","addNewOrder","order","ADD_NEW_ORDER","updateOrder","UPDATE_ORDER","deleteOrder","DELETE_ORDER","getCartData","GET_CART_DATA","getCustomers","GET_CUSTOMERS","addNewCustomer","customer","ADD_NEW_CUSTOMER","updateCustomer","UPDATE_CUSTOMER","deleteCustomer","DELETE_CUSTOMER","getShops","GET_SHOPS","getWallet","GET_WALLET","getCryptoOrder","GET_CRYPTO_ORDERS","getInvoices","GET_INVOICES","getInvoiceDetail","GET_INVOICE_DETAIL","getProjects","GET_PROJECTS","getProjectsDetails","GET_PROJECT_DETAIL","addNewProject","project","ADD_NEW_PROJECT","updateProject","UPDATE_PROJECT","deleteProject","DELETE_PROJECT","getTasks","GET_TASKS","getUsers","GET_USERS","addNewUser","ADD_NEW_USER","updateUser","UPDATE_USER","deleteUser","DELETE_USER","getUserProfile","GET_USER_PROFILE","getInboxMails","GET_INBOX_MAILS","addNewInboxMail","inboxmail","ADD_NEW_INBOX_MAIL","deleteInboxMail","DELETE_INBOX_MAIL","getStarredMails","GET_STARRED_MAILS","getImportantMails","GET_IMPORTANT_MAILS","getSentMails","GET_SENT_MAILS","getTrashMails","GET_TRASH_MAILS","getDraftMails","GET_DRAFT_MAILS","getWeeklyData","GET_WEEKLY_DATA","getYearlyData","GET_YEARLY_DATA","getMonthlyData","GET_MONTHLY_DATA","topSellingData","month","TOP_SELLING_DATA","getEarningChartsData","GET_EARNING_DATA"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport { del, get, post, put } from \"./api_helper\"\nimport * as url from \"./url_helper\"\n\n// Gets the logged in user data from local session\nconst getLoggedInUser = () => {\n  const user = localStorage.getItem(\"user\")\n  if (user) return JSON.parse(user)\n  return null\n}\n\n//is user is logged in\nconst isUserAuthenticated = () => {\n  return getLoggedInUser() !== null\n}\n\n// Register Method\nconst postFakeRegister = data => {\n  return axios\n    .post(url.POST_FAKE_REGISTER, data)\n    .then(response => {\n      if (response.status >= 200 || response.status <= 299) return response.data\n      throw response.data\n    })\n    .catch(err => {\n      let message\n      if (err.response && err.response.status) {\n        switch (err.response.status) {\n          case 404:\n            message = \"Sorry! the page you are looking for could not be found\"\n            break\n          case 500:\n            message =\n              \"Sorry! something went wrong, please contact our support team\"\n            break\n          case 401:\n            message = \"Invalid credentials\"\n            break\n          default:\n            message = err[1]\n            break\n        }\n      }\n      throw message\n    })\n}\n\n// Login Method\nconst postFakeLogin = data => post(url.POST_FAKE_LOGIN, data)\n\n// postForgetPwd\nconst postFakeForgetPwd = data => post(url.POST_FAKE_PASSWORD_FORGET, data)\n\n// Edit profile\nconst postJwtProfile = data => post(url.POST_EDIT_JWT_PROFILE, data)\n\nconst postFakeProfile = data => post(url.POST_EDIT_PROFILE, data)\n\n// Register Method\nconst postJwtRegister = (url, data) => {\n  return axios\n    .post(url, data)\n    .then(response => {\n      if (response.status >= 200 || response.status <= 299) return response.data\n      throw response.data\n    })\n    .catch(err => {\n      var message\n      if (err.response && err.response.status) {\n        switch (err.response.status) {\n          case 404:\n            message = \"Sorry! the page you are looking for could not be found\"\n            break\n          case 500:\n            message =\n              \"Sorry! something went wrong, please contact our support team\"\n            break\n          case 401:\n            message = \"Invalid credentials\"\n            break\n          default:\n            message = err[1]\n            break\n        }\n      }\n      throw message\n    })\n}\n\n// Login Method\nconst postJwtLogin = data => post(url.POST_FAKE_JWT_LOGIN, data)\n\n// postForgetPwd\nconst postJwtForgetPwd = data => post(url.POST_FAKE_JWT_PASSWORD_FORGET, data)\n\n// postSocialLogin\nexport const postSocialLogin = data => post(url.SOCIAL_LOGIN, data)\n\n// get Products\nexport const getProducts = () => get(url.GET_PRODUCTS)\n\n// get Product detail\nexport const getProductDetail = id =>\n  get(`${url.GET_PRODUCTS_DETAIL}/${id}`, { params: { id } })\n\n// get Events\nexport const getEvents = () => get(url.GET_EVENTS)\n\n// add Events\nexport const addNewEvent = event => post(url.ADD_NEW_EVENT, event)\n\n// update Event\nexport const updateEvent = event => put(url.UPDATE_EVENT, event)\n\n// delete Event\nexport const deleteEvent = event =>\n  del(url.DELETE_EVENT, { headers: { event } })\n\n// get Categories\nexport const getCategories = () => get(url.GET_CATEGORIES)\n\n// get chats\nexport const getChats = () => get(url.GET_CHATS)\n\n// get groups\nexport const getGroups = () => get(url.GET_GROUPS)\n\n// get Contacts\nexport const getContacts = () => get(url.GET_CONTACTS)\n\n\n// get messages\nexport const getMessages = (roomId = \"\") =>\n  get(`${url.GET_MESSAGES}/${roomId}`, { params: { roomId } })\n\n// post messages\nexport const addMessage = message => post(url.ADD_MESSAGE, message)\n\n// get orders\nexport const getOrders = () => get(url.GET_ORDERS)\n\n// add order\nexport const addNewOrder = order => post(url.ADD_NEW_ORDER, order)\n\n// update order\nexport const updateOrder = order => put(url.UPDATE_ORDER, order)\n\n// delete order\nexport const deleteOrder = order =>\n  del(url.DELETE_ORDER, { headers: { order } })\n\n// get cart data\nexport const getCartData = () => get(url.GET_CART_DATA)\n\n// get customers\nexport const getCustomers = () => get(url.GET_CUSTOMERS)\n\n// add customer\nexport const addNewCustomer = customer => post(url.ADD_NEW_CUSTOMER, customer)\n\n// update customer\nexport const updateCustomer = customer => put(url.UPDATE_CUSTOMER, customer)\n\n// delete customer\nexport const deleteCustomer = customer =>\n  del(url.DELETE_CUSTOMER, { headers: { customer } })\n\n// get shops\nexport const getShops = () => get(url.GET_SHOPS)\n\n// get wallet\nexport const getWallet = () => get(url.GET_WALLET)\n\n// get crypto order\nexport const getCryptoOrder = () => get(url.GET_CRYPTO_ORDERS)\n\n// get invoices\nexport const getInvoices = () => get(url.GET_INVOICES)\n\n// get invoice details\nexport const getInvoiceDetail = id =>\n  get(`${url.GET_INVOICE_DETAIL}/${id}`, { params: { id } })\n\n// get project\nexport const getProjects = () => get(url.GET_PROJECTS)\n\n// get project details\nexport const getProjectsDetails = id =>\n  get(`${url.GET_PROJECT_DETAIL}/${id}`, { params: { id } })\n\n// add project\nexport const addNewProject = project => post(url.ADD_NEW_PROJECT, project)\n\n// update project\nexport const updateProject = project => put(url.UPDATE_PROJECT, project)\n\n// delete project\nexport const deleteProject = project =>\n  del(url.DELETE_PROJECT, { headers: { project } })\n\n// get tasks\nexport const getTasks = () => get(url.GET_TASKS)\n\n// get contacts\nexport const getUsers = () => get(url.GET_USERS)\n\n// add user\nexport const addNewUser = user => post(url.ADD_NEW_USER, user)\n\n// update user\nexport const updateUser = user => put(url.UPDATE_USER, user)\n\n// delete user\nexport const deleteUser = user =>\n  del(url.DELETE_USER, { headers: { user } })\n\nexport const getUserProfile = () => get(url.GET_USER_PROFILE)\n\n// get inboxmail\nexport const getInboxMails = () => get(url.GET_INBOX_MAILS)\n\n// add inboxmail\nexport const addNewInboxMail = inboxmail => post(url.ADD_NEW_INBOX_MAIL, inboxmail)\n\n// delete inboxmail\nexport const deleteInboxMail = inboxmail =>\n  del(url.DELETE_INBOX_MAIL, { headers: { inboxmail } })\n\n// get starredmail\nexport const getStarredMails = () => get(url.GET_STARRED_MAILS)\n// get importantmail\nexport const getImportantMails = () => get(url.GET_IMPORTANT_MAILS)\n\n// get sent mail\nexport const getSentMails = () => get(url.GET_SENT_MAILS)\n\n// get trash mail\nexport const getTrashMails = () => get(url.GET_TRASH_MAILS)\n\n// get starredmail\nexport const getDraftMails = () => get(url.GET_DRAFT_MAILS)\n\n// get dashboard charts data\nexport const getWeeklyData = () => get(url.GET_WEEKLY_DATA);\nexport const getYearlyData = () => get(url.GET_YEARLY_DATA);\nexport const getMonthlyData = () => get(url.GET_MONTHLY_DATA);\n\nexport const topSellingData = month =>\n  get(`${url.TOP_SELLING_DATA}/${month}`, { params: { month } })\n\nexport const getEarningChartsData = month =>\n  get(`${url.GET_EARNING_DATA}/${month}`, { params: { month } })\n\nexport {\n  getLoggedInUser,\n  isUserAuthenticated,\n  postFakeRegister,\n  postFakeLogin,\n  postFakeProfile,\n  postFakeForgetPwd,\n  postJwtRegister,\n  postJwtLogin,\n  postJwtForgetPwd,\n  postJwtProfile\n}\n"]},"metadata":{},"sourceType":"module"}
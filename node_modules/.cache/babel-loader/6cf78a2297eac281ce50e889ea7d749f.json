{"ast":null,"code":"import _regeneratorRuntime from\"D:/localserver-php8/htdocs/react/realtyspace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchInvoices),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(fetchInvoiceDetail),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(invoiceSaga);import{call,put,takeEvery}from\"redux-saga/effects\";// Crypto Redux States\nimport{GET_INVOICES,GET_INVOICE_DETAIL}from\"./actionTypes\";import{getInvoicesSuccess,getInvoicesFail,getInvoiceDetailSuccess,getInvoiceDetailFail}from\"./actions\";//Include Both Helper File with needed methods\nimport{getInvoices,getInvoiceDetail}from\"helpers/fakebackend_helper\";function fetchInvoices(){var response;return _regeneratorRuntime.wrap(function fetchInvoices$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return call(getInvoices);case 3:response=_context.sent;_context.next=6;return put(getInvoicesSuccess(response));case 6:_context.next=12;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);_context.next=12;return put(getInvoicesFail(_context.t0));case 12:case\"end\":return _context.stop();}}},_marked,null,[[0,8]]);}function fetchInvoiceDetail(_ref){var invoiceId,response;return _regeneratorRuntime.wrap(function fetchInvoiceDetail$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:invoiceId=_ref.invoiceId;_context2.prev=1;_context2.next=4;return call(getInvoiceDetail,invoiceId);case 4:response=_context2.sent;_context2.next=7;return put(getInvoiceDetailSuccess(response));case 7:_context2.next=13;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](1);_context2.next=13;return put(getInvoiceDetailFail(_context2.t0));case 13:case\"end\":return _context2.stop();}}},_marked2,null,[[1,9]]);}function invoiceSaga(){return _regeneratorRuntime.wrap(function invoiceSaga$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return takeEvery(GET_INVOICES,fetchInvoices);case 2:_context3.next=4;return takeEvery(GET_INVOICE_DETAIL,fetchInvoiceDetail);case 4:case\"end\":return _context3.stop();}}},_marked3);}export default invoiceSaga;","map":{"version":3,"sources":["D:/localserver-php8/htdocs/react/realtyspace/src/store/invoices/saga.js"],"names":["fetchInvoices","fetchInvoiceDetail","invoiceSaga","call","put","takeEvery","GET_INVOICES","GET_INVOICE_DETAIL","getInvoicesSuccess","getInvoicesFail","getInvoiceDetailSuccess","getInvoiceDetailFail","getInvoices","getInvoiceDetail","response","invoiceId"],"mappings":"4MAcUA,a,iDASAC,kB,iDASAC,W,EAhCV,OAASC,IAAT,CAAeC,GAAf,CAAoBC,SAApB,KAAqC,oBAArC,CAEA;AACA,OAASC,YAAT,CAAuBC,kBAAvB,KAAiD,eAAjD,CACA,OACEC,kBADF,CAEEC,eAFF,CAGEC,uBAHF,CAIEC,oBAJF,KAKO,WALP,CAOA;AACA,OAASC,WAAT,CAAsBC,gBAAtB,KAA8C,4BAA9C,CAEA,QAAUb,CAAAA,aAAV,sKAEqB,MAAMG,CAAAA,IAAI,CAACS,WAAD,CAAV,CAFrB,OAEUE,QAFV,+BAGI,MAAMV,CAAAA,GAAG,CAACI,kBAAkB,CAACM,QAAD,CAAnB,CAAT,CAHJ,uGAKI,MAAMV,CAAAA,GAAG,CAACK,eAAe,aAAhB,CAAT,CALJ,oEASA,QAAUR,CAAAA,kBAAV,4JAA+Bc,SAA/B,MAA+BA,SAA/B,mCAEqB,MAAMZ,CAAAA,IAAI,CAACU,gBAAD,CAAmBE,SAAnB,CAAV,CAFrB,OAEUD,QAFV,iCAGI,MAAMV,CAAAA,GAAG,CAACM,uBAAuB,CAACI,QAAD,CAAxB,CAAT,CAHJ,4GAKI,MAAMV,CAAAA,GAAG,CAACO,oBAAoB,cAArB,CAAT,CALJ,sEASA,QAAUT,CAAAA,WAAV,2IACE,MAAMG,CAAAA,SAAS,CAACC,YAAD,CAAeN,aAAf,CAAf,CADF,wBAEE,MAAMK,CAAAA,SAAS,CAACE,kBAAD,CAAqBN,kBAArB,CAAf,CAFF,wDAKA,cAAeC,CAAAA,WAAf","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\"\n\n// Crypto Redux States\nimport { GET_INVOICES, GET_INVOICE_DETAIL } from \"./actionTypes\"\nimport {\n  getInvoicesSuccess,\n  getInvoicesFail,\n  getInvoiceDetailSuccess,\n  getInvoiceDetailFail,\n} from \"./actions\"\n\n//Include Both Helper File with needed methods\nimport { getInvoices, getInvoiceDetail } from \"helpers/fakebackend_helper\"\n\nfunction* fetchInvoices() {\n  try {\n    const response = yield call(getInvoices)\n    yield put(getInvoicesSuccess(response))\n  } catch (error) {\n    yield put(getInvoicesFail(error))\n  }\n}\n\nfunction* fetchInvoiceDetail({ invoiceId }) {\n  try {\n    const response = yield call(getInvoiceDetail, invoiceId)\n    yield put(getInvoiceDetailSuccess(response))\n  } catch (error) {\n    yield put(getInvoiceDetailFail(error))\n  }\n}\n\nfunction* invoiceSaga() {\n  yield takeEvery(GET_INVOICES, fetchInvoices)\n  yield takeEvery(GET_INVOICE_DETAIL, fetchInvoiceDetail)\n}\n\nexport default invoiceSaga\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\localserver-php8\\\\htdocs\\\\react\\\\realtyspace\\\\src\\\\pages\\\\Pre-Construction\\\\Projects\\\\index.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport MetaTags from 'react-meta-tags';\nimport { withRouter } from \"react-router-dom\";\nimport { isEmpty, size } from \"lodash\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport { Link } from \"react-router-dom\";\nimport * as moment from 'moment';\nimport { Button, Card, CardBody, Col, Container, Row, Modal, Badge, ModalHeader, ModalBody } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport { withTranslation } from \"react-i18next\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"components/Common/Breadcrumb\";\nimport { getOrders, addNewOrder, updateOrder, deleteOrder } from \"store/actions\";\nimport EcommerceOrdersModal from \"./EcommerceOrdersModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass EcommerceOrders extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOrderClicks = () => {\n      this.setState({\n        orders: '',\n        isEdit: false\n      });\n      this.toggle();\n    };\n\n    this.handleTableChange = (type, {\n      page,\n      searchText\n    }) => {\n      const {\n        orders\n      } = this.props;\n      this.setState({\n        orders: orders.filter(order => Object.keys(order).some(key => typeof order[key] === \"string\" && order[key].toLowerCase().includes(searchText.toLowerCase())))\n      });\n    };\n\n    this.toggleViewModal = () => {\n      this.setState(prevState => ({\n        viewmodal: !prevState.viewmodal\n      }));\n    };\n\n    this.onPaginationPageChange = page => {\n      if (this.node && this.node.current && this.node.current.props && this.node.current.props.pagination && this.node.current.props.pagination.options) {\n        this.node.current.props.pagination.options.onPageChange(page);\n      }\n    };\n\n    this.handleDeleteOrder = order => {\n      const {\n        onDeleteOrder\n      } = this.props;\n\n      if (order.id !== undefined) {\n        onDeleteOrder(order);\n        this.onPaginationPageChange(1);\n      }\n    };\n\n    this.handleOrderClick = arg => {\n      const order = arg;\n      this.setState({\n        orders: {\n          orderId: order.orderId,\n          billingName: order.billingName,\n          orderdate: order.orderdate,\n          total: order.total,\n          paymentStatus: order.paymentStatus,\n          paymentMethod: order.paymentMethod,\n          badgeclass: order.badgeclass\n        },\n        isEdit: true\n      });\n      this.toggle();\n    };\n\n    this.handleValidOrderSubmit = (e, values) => {\n      const {\n        onAddNewOrder,\n        onUpdateOrder\n      } = this.props;\n      const {\n        isEdit,\n        orders,\n        selectedOrder\n      } = this.state;\n\n      if (isEdit) {\n        const updateOrder = {\n          id: orders.id,\n          orderId: values.orderId,\n          billingName: values.billingName,\n          orderdate: values.orderdate,\n          total: values.total,\n          paymentStatus: values.paymentStatus,\n          paymentMethod: values.paymentMethod,\n          badgeclass: values.badgeclass\n        }; // update Order\n\n        onUpdateOrder(updateOrder);\n      } else {\n        const newOrder = {\n          id: Math.floor(Math.random() * (30 - 20)) + 20,\n          orderId: values[\"orderId\"],\n          billingName: values[\"billingName\"],\n          orderdate: values[\"orderdate\"],\n          total: values[\"total\"],\n          paymentStatus: values[\"paymentStatus\"],\n          paymentMethod: values[\"paymentMethod\"],\n          badgeclass: values['badgeclass']\n        }; // save new Order\n\n        onAddNewOrder(newOrder);\n      }\n\n      this.setState({\n        selectedOrder: null\n      });\n      this.toggle();\n    };\n\n    this.handleValidDate = date => {\n      const date1 = moment(new Date(date)).format('DD MMM Y');\n      return date1;\n    };\n\n    this.node = /*#__PURE__*/React.createRef();\n    this.state = {\n      viewmodal: false,\n      modal: false,\n      orders: [],\n      EcommerceOrderColumns: [{\n        dataField: \"orderId\",\n        text: \"Order ID\",\n        sort: true,\n        formatter: (cellContent, row) => /*#__PURE__*/_jsxDEV(Link, {\n          to: \"#\",\n          className: \"text-body fw-bold\",\n          children: row.orderId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, {\n        dataField: \"billingName\",\n        text: \"Billing Name\",\n        sort: true\n      }, {\n        dataField: \"orderdate\",\n        text: \"Date\",\n        sort: true,\n        formatter: (cellContent, row) => this.handleValidDate(row.orderdate)\n      }, {\n        dataField: \"total\",\n        text: \"Total\",\n        sort: true\n      }, {\n        dataField: \"paymentStatus\",\n        text: \"Payment Status\",\n        sort: true,\n        formatter: (cellContent, row) => /*#__PURE__*/_jsxDEV(Badge, {\n          className: \"font-size-12 badge-soft-\" + row.badgeclass,\n          color: row.badgeclass,\n          pill: true,\n          children: row.paymentStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, {\n        dataField: \"paymentMethod\",\n        isDummyField: true,\n        text: \"Payment Method\",\n        sort: true,\n        formatter: (cellContent, row) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: row.paymentMethod !== 'COD' ? 'fab fa-cc-' + this.toLowerCase1(row.paymentMethod) + \" me-1\" : 'fab fas fa-money-bill-alt me-1'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), \" \", row.paymentMethod]\n        }, void 0, true)\n      }, {\n        dataField: \"view\",\n        isDummyField: true,\n        text: \"View Details\",\n        sort: true,\n        formatter: () => /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          color: \"primary\",\n          className: \"btn-sm btn-rounded\",\n          onClick: this.toggleViewModal,\n          children: \"View Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, {\n        dataField: \"action\",\n        isDummyField: true,\n        text: \"Action\",\n        formatter: (cellContent, order) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"#\",\n              className: \"text-success\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-pencil font-size-18\",\n                id: \"edittooltip\",\n                onClick: () => this.handleOrderClick(order)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"#\",\n              className: \"text-danger\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-delete font-size-18\",\n                id: \"deletetooltip\",\n                onClick: () => this.handleDeleteOrder(order)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }]\n    };\n    this.handleOrderClick = this.handleOrderClick.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.handleValidOrderSubmit = this.handleValidOrderSubmit.bind(this);\n    this.handleOrderClicks = this.handleOrderClicks.bind(this);\n    this.toLowerCase1 = this.toLowerCase1.bind(this);\n  }\n\n  toLowerCase1(str) {\n    return str.toLowerCase();\n  }\n\n  componentDidMount() {\n    const {\n      orders,\n      onGetOrders\n    } = this.props;\n\n    if (orders && !orders.length) {\n      onGetOrders();\n    }\n\n    this.setState({\n      orders\n    });\n  } // eslint-disable-next-line no-unused-vars\n\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const {\n      orders\n    } = this.props;\n\n    if (!isEmpty(orders) && size(prevProps.orders) !== size(orders)) {\n      this.setState({\n        orders: {},\n        isEdit: false\n      });\n    }\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  render() {\n    const {\n      orders\n    } = this.props;\n    const {\n      SearchBar\n    } = Search;\n    const {\n      isEdit\n    } = this.state; //pagination customization\n\n    const pageOptions = {\n      sizePerPage: 10,\n      totalSize: orders.length,\n      // replace later with size(Order),\n      custom: true\n    };\n    const defaultSorted = [{\n      dataField: 'orderId',\n      order: 'desc'\n    }];\n    const selectRow = {\n      mode: 'checkbox'\n    };\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(EcommerceOrdersModal, {\n        isOpen: this.state.viewmodal,\n        toggle: this.toggleViewModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        children: [/*#__PURE__*/_jsxDEV(MetaTags, {\n          children: /*#__PURE__*/_jsxDEV(\"title\", {\n            children: \"Project | Realty Space\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n            title: this.props.t(\"Project\"),\n            breadcrumbItem: this.props.t(\"Project\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: \"12\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(CardBody, {\n                  children: /*#__PURE__*/_jsxDEV(PaginationProvider, {\n                    pagination: paginationFactory(pageOptions || []),\n                    keyField: \"id\",\n                    columns: this.state.EcommerceOrderColumns || [],\n                    data: orders || [],\n                    children: ({\n                      paginationProps,\n                      paginationTableProps\n                    }) => /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n                      keyField: \"id\",\n                      data: orders,\n                      columns: this.state.EcommerceOrderColumns || [],\n                      bootstrap4: true,\n                      search: true,\n                      children: toolkitProps => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(Row, {\n                          className: \"mb-2\",\n                          children: [/*#__PURE__*/_jsxDEV(Col, {\n                            sm: \"4\",\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"search-box me-2 mb-2 d-inline-block\",\n                              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"position-relative\",\n                                children: [/*#__PURE__*/_jsxDEV(SearchBar, { ...toolkitProps.searchProps\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 340,\n                                  columnNumber: 39\n                                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"bx bx-search-alt search-icon\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 343,\n                                  columnNumber: 39\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 339,\n                                columnNumber: 37\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 338,\n                              columnNumber: 35\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 337,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            sm: \"8\",\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"text-sm-end\",\n                              children: /*#__PURE__*/_jsxDEV(Button, {\n                                type: \"button\",\n                                color: \"success\",\n                                className: \"btn-rounded mb-2 me-2\",\n                                onClick: this.handleOrderClicks,\n                                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"mdi mdi-plus me-1\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 355,\n                                  columnNumber: 39\n                                }, this), \" \", \"Add New Order\"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 349,\n                                columnNumber: 37\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 348,\n                              columnNumber: 35\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 347,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 336,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"table-responsive\",\n                          children: [/*#__PURE__*/_jsxDEV(BootstrapTable, { ...toolkitProps.baseProps,\n                            ...paginationTableProps,\n                            responsive: true,\n                            defaultSorted: defaultSorted,\n                            bordered: false,\n                            striped: false,\n                            selectRow: selectRow,\n                            classes: \"table align-middle table-nowrap table-check\",\n                            headerWrapperClasses: \"table-light\",\n                            ref: this.node\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 362,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                            isOpen: this.state.modal,\n                            className: this.props.className,\n                            children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n                              toggle: this.toggle,\n                              tag: \"h4\",\n                              children: !!isEdit ? \"Edit Order\" : \"Add Order\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 380,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n                              children: /*#__PURE__*/_jsxDEV(AvForm, {\n                                onValidSubmit: this.handleValidOrderSubmit,\n                                children: [/*#__PURE__*/_jsxDEV(Row, {\n                                  form: true,\n                                  children: /*#__PURE__*/_jsxDEV(Col, {\n                                    className: \"col-12\",\n                                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                      className: \"mb-3\",\n                                      children: /*#__PURE__*/_jsxDEV(AvField, {\n                                        name: \"orderId\",\n                                        label: \"Order Id\",\n                                        type: \"text\",\n                                        errorMessage: \"Invalid orderId\",\n                                        validate: {\n                                          required: {\n                                            value: true\n                                          }\n                                        },\n                                        value: this.state.orders.orderId || \"\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 393,\n                                        columnNumber: 45\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 392,\n                                      columnNumber: 43\n                                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                      className: \"mb-3\",\n                                      children: /*#__PURE__*/_jsxDEV(AvField, {\n                                        name: \"billingName\",\n                                        label: \"Billing Name\",\n                                        type: \"text\",\n                                        errorMessage: \"Invalid Billing Name\",\n                                        validate: {\n                                          required: {\n                                            value: true\n                                          }\n                                        },\n                                        value: this.state.orders.billingName || \"\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 406,\n                                        columnNumber: 45\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 405,\n                                      columnNumber: 43\n                                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                      className: \"mb-3\",\n                                      children: /*#__PURE__*/_jsxDEV(AvField, {\n                                        name: \"orderdate\",\n                                        label: \"Date\",\n                                        type: \"date\",\n                                        errorMessage: \"Invalid Date\",\n                                        validate: {\n                                          required: {\n                                            value: true\n                                          }\n                                        },\n                                        value: this.state.orders.orderdate || \"\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 418,\n                                        columnNumber: 45\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 417,\n                                      columnNumber: 43\n                                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                      className: \"mb-3\",\n                                      children: /*#__PURE__*/_jsxDEV(AvField, {\n                                        name: \"total\",\n                                        label: \"Total\",\n                                        type: \"text\",\n                                        errorMessage: \"Invalid Total\",\n                                        validate: {\n                                          required: {\n                                            value: true\n                                          }\n                                        },\n                                        value: this.state.orders.total || \"\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 431,\n                                        columnNumber: 45\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 430,\n                                      columnNumber: 43\n                                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                      className: \"mb-3\",\n                                      children: /*#__PURE__*/_jsxDEV(AvField, {\n                                        name: \"paymentStatus\",\n                                        label: \"Payment Status\",\n                                        type: \"select\",\n                                        id: \"status1\",\n                                        className: \"form-select\",\n                                        errorMessage: \"Invalid Payment Status\",\n                                        validate: {\n                                          required: {\n                                            value: true\n                                          }\n                                        },\n                                        value: this.state.orders.paymentStatus || \"Paid\",\n                                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                                          children: \"Paid\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 455,\n                                          columnNumber: 47\n                                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                          children: \"Chargeback\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 456,\n                                          columnNumber: 47\n                                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                          children: \"Refund\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 457,\n                                          columnNumber: 47\n                                        }, this)]\n                                      }, void 0, true, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 443,\n                                        columnNumber: 45\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 442,\n                                      columnNumber: 43\n                                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                      className: \"mb-3\",\n                                      children: /*#__PURE__*/_jsxDEV(AvField, {\n                                        name: \"badgeclass\",\n                                        label: \"Badge Class\",\n                                        type: \"select\",\n                                        className: \"form-select\",\n                                        errorMessage: \"Invalid Badge Class\",\n                                        validate: {\n                                          required: {\n                                            value: true\n                                          }\n                                        },\n                                        value: this.state.orders.badgeclass || \"success\",\n                                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                                          children: \"success\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 472,\n                                          columnNumber: 47\n                                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                          children: \"danger\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 473,\n                                          columnNumber: 47\n                                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                          children: \"warning\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 474,\n                                          columnNumber: 47\n                                        }, this)]\n                                      }, void 0, true, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 461,\n                                        columnNumber: 45\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 460,\n                                      columnNumber: 43\n                                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                      className: \"mb-3\",\n                                      children: /*#__PURE__*/_jsxDEV(AvField, {\n                                        name: \"paymentMethod\",\n                                        label: \"Payment Method\",\n                                        type: \"select\",\n                                        className: \"form-select\",\n                                        errorMessage: \"Invalid Payment Method\",\n                                        validate: {\n                                          required: {\n                                            value: true\n                                          }\n                                        },\n                                        value: this.state.orders.paymentMethod || \"Mastercard\",\n                                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                                          children: \"Mastercard\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 489,\n                                          columnNumber: 47\n                                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                          children: \"Visa\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 490,\n                                          columnNumber: 47\n                                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                          children: \"Paypal\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 491,\n                                          columnNumber: 47\n                                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                          children: \"COD\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 492,\n                                          columnNumber: 47\n                                        }, this)]\n                                      }, void 0, true, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 478,\n                                        columnNumber: 45\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 477,\n                                      columnNumber: 43\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 390,\n                                    columnNumber: 41\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 389,\n                                  columnNumber: 39\n                                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                                  children: /*#__PURE__*/_jsxDEV(Col, {\n                                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                      className: \"text-end\",\n                                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                                        type: \"submit\",\n                                        className: \"btn btn-success save-user\",\n                                        children: \"Save\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 502,\n                                        columnNumber: 45\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 500,\n                                      columnNumber: 43\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 499,\n                                    columnNumber: 41\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 498,\n                                  columnNumber: 39\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 384,\n                                columnNumber: 37\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 383,\n                              columnNumber: 35\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 376,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 361,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"pagination pagination-rounded justify-content-end mb-2\",\n                          children: /*#__PURE__*/_jsxDEV(PaginationListStandalone, { ...paginationProps\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 516,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 515,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 335,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nEcommerceOrders.propTypes = {\n  orders: PropTypes.array,\n  onGetOrders: PropTypes.func,\n  onAddNewOrder: PropTypes.func,\n  onDeleteOrder: PropTypes.func,\n  onUpdateOrder: PropTypes.func,\n  className: PropTypes.any,\n  t: PropTypes.any\n};\n\nconst mapStateToProps = state => ({\n  orders: state.ecommerce.orders\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onGetOrders: () => dispatch(getOrders()),\n  onAddNewOrder: order => dispatch(addNewOrder(order)),\n  onUpdateOrder: order => dispatch(updateOrder(order)),\n  onDeleteOrder: order => dispatch(deleteOrder(order))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withTranslation()(EcommerceOrders));","map":{"version":3,"sources":["D:/localserver-php8/htdocs/react/realtyspace/src/pages/Pre-Construction/Projects/index.js"],"names":["React","Component","PropTypes","connect","MetaTags","withRouter","isEmpty","size","BootstrapTable","paginationFactory","PaginationProvider","PaginationListStandalone","ToolkitProvider","Search","Link","moment","Button","Card","CardBody","Col","Container","Row","Modal","Badge","ModalHeader","ModalBody","AvForm","AvField","withTranslation","Breadcrumbs","getOrders","addNewOrder","updateOrder","deleteOrder","EcommerceOrdersModal","EcommerceOrders","constructor","props","handleOrderClicks","setState","orders","isEdit","toggle","handleTableChange","type","page","searchText","filter","order","Object","keys","some","key","toLowerCase","includes","toggleViewModal","prevState","viewmodal","onPaginationPageChange","node","current","pagination","options","onPageChange","handleDeleteOrder","onDeleteOrder","id","undefined","handleOrderClick","arg","orderId","billingName","orderdate","total","paymentStatus","paymentMethod","badgeclass","handleValidOrderSubmit","e","values","onAddNewOrder","onUpdateOrder","selectedOrder","state","newOrder","Math","floor","random","handleValidDate","date","date1","Date","format","createRef","modal","EcommerceOrderColumns","dataField","text","sort","formatter","cellContent","row","isDummyField","toLowerCase1","bind","str","componentDidMount","onGetOrders","length","componentDidUpdate","prevProps","snapshot","render","SearchBar","pageOptions","sizePerPage","totalSize","custom","defaultSorted","selectRow","mode","t","paginationProps","paginationTableProps","toolkitProps","searchProps","baseProps","className","required","value","propTypes","array","func","any","mapStateToProps","ecommerce","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport MetaTags from 'react-meta-tags';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { isEmpty, size } from \"lodash\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport\r\npaginationFactory, {\r\n  PaginationProvider,\r\n  PaginationListStandalone,\r\n} from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as moment from 'moment';\r\n\r\nimport { Button, Card, CardBody, Col, Container, Row, Modal, Badge, ModalHeader, ModalBody } from \"reactstrap\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\r\nimport { withTranslation } from \"react-i18next\"\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"components/Common/Breadcrumb\";\r\nimport {\r\n  getOrders,\r\n  addNewOrder,\r\n  updateOrder,\r\n  deleteOrder\r\n} from \"store/actions\";\r\n\r\nimport EcommerceOrdersModal from \"./EcommerceOrdersModal\";\r\n\r\nclass EcommerceOrders extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.node = React.createRef();\r\n    this.state = {\r\n      viewmodal: false,\r\n      modal: false,\r\n      orders: [],\r\n      EcommerceOrderColumns: [\r\n        {\r\n          dataField: \"orderId\",\r\n          text: \"Order ID\",\r\n          sort: true,\r\n          formatter: (cellContent, row) => (\r\n            <Link to=\"#\" className=\"text-body fw-bold\">\r\n              {row.orderId}\r\n            </Link>\r\n          ),\r\n        },\r\n        {\r\n          dataField: \"billingName\",\r\n          text: \"Billing Name\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"orderdate\",\r\n          text: \"Date\",\r\n          sort: true,\r\n          formatter: (cellContent, row) => (\r\n            this.handleValidDate(row.orderdate)\r\n          ),\r\n        },\r\n        {\r\n          dataField: \"total\",\r\n          text: \"Total\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"paymentStatus\",\r\n          text: \"Payment Status\",\r\n          sort: true,\r\n          formatter: (cellContent, row) => (\r\n            <Badge\r\n              className={\"font-size-12 badge-soft-\" + row.badgeclass}\r\n              color={row.badgeclass}\r\n              pill\r\n            >\r\n              {row.paymentStatus}\r\n            </Badge>\r\n          ),\r\n        },\r\n        {\r\n          dataField: \"paymentMethod\",\r\n          isDummyField: true,\r\n          text: \"Payment Method\",\r\n          sort: true,\r\n          formatter: (cellContent, row) => (\r\n            <>\r\n              <i className={\r\n                (row.paymentMethod !== 'COD') ?\r\n                  'fab fa-cc-' + this.toLowerCase1(row.paymentMethod) + \" me-1\"\r\n                  : 'fab fas fa-money-bill-alt me-1'\r\n              } />{\" \"}\r\n              {row.paymentMethod}\r\n            </>\r\n          ),\r\n        },\r\n        {\r\n          dataField: \"view\",\r\n          isDummyField: true,\r\n          text: \"View Details\",\r\n          sort: true,\r\n          formatter: () => (\r\n            <Button\r\n              type=\"button\"\r\n              color=\"primary\"\r\n              className=\"btn-sm btn-rounded\"\r\n              onClick={this.toggleViewModal}\r\n            >\r\n              View Details\r\n            </Button>\r\n          ),\r\n        },\r\n        {\r\n          dataField: \"action\",\r\n          isDummyField: true,\r\n          text: \"Action\",\r\n          formatter: (cellContent, order) => (\r\n            <>\r\n              <div className=\"d-flex gap-3\">\r\n                <Link to=\"#\" className=\"text-success\">\r\n                  <i className=\"mdi mdi-pencil font-size-18\" id=\"edittooltip\" onClick={() => this.handleOrderClick(order)} />\r\n                </Link>\r\n                <Link to=\"#\" className=\"text-danger\">\r\n                  <i className=\"mdi mdi-delete font-size-18\" id=\"deletetooltip\" onClick={() => this.handleDeleteOrder(order)} />\r\n                </Link>\r\n              </div>\r\n            </>\r\n          ),\r\n        },\r\n      ]\r\n    };\r\n\r\n    this.handleOrderClick = this.handleOrderClick.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.handleValidOrderSubmit = this.handleValidOrderSubmit.bind(this);\r\n    this.handleOrderClicks = this.handleOrderClicks.bind(this);\r\n    this.toLowerCase1 = this.toLowerCase1.bind(this);\r\n  }\r\n\r\n  toLowerCase1(str) {\r\n    return str.toLowerCase();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { orders, onGetOrders } = this.props;\r\n    if (orders && !orders.length) {\r\n      onGetOrders();\r\n    }\r\n    this.setState({ orders });\r\n  }\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    const { orders } = this.props;\r\n    if (!isEmpty(orders) && size(prevProps.orders) !== size(orders)) {\r\n      this.setState({ orders: {}, isEdit: false });\r\n    }\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal,\r\n    }));\r\n  }\r\n\r\n  handleOrderClicks = () => {\r\n    this.setState({ orders: '', isEdit: false });\r\n    this.toggle();\r\n  };\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  handleTableChange = (type, { page, searchText }) => {\r\n    const { orders } = this.props;\r\n    this.setState({\r\n      orders: orders.filter(order =>\r\n        Object.keys(order).some(\r\n          key =>\r\n            typeof order[key] === \"string\" &&\r\n            order[key].toLowerCase().includes(searchText.toLowerCase())\r\n        )\r\n      ),\r\n    });\r\n  };\r\n\r\n  toggleViewModal = () => {\r\n    this.setState(prevState => ({\r\n      viewmodal: !prevState.viewmodal,\r\n    }));\r\n  };\r\n\r\n  onPaginationPageChange = page => {\r\n    if (\r\n      this.node &&\r\n      this.node.current &&\r\n      this.node.current.props &&\r\n      this.node.current.props.pagination &&\r\n      this.node.current.props.pagination.options\r\n    ) {\r\n      this.node.current.props.pagination.options.onPageChange(page);\r\n    }\r\n  };\r\n\r\n  /* Insert,Update Delete data */\r\n\r\n  handleDeleteOrder = (order) => {\r\n    const { onDeleteOrder } = this.props;\r\n    if (order.id !== undefined) {\r\n      onDeleteOrder(order);\r\n      this.onPaginationPageChange(1);\r\n    }\r\n  };\r\n\r\n  handleOrderClick = arg => {\r\n    const order = arg;\r\n\r\n    this.setState({\r\n      orders: {\r\n       \r\n        orderId: order.orderId,\r\n        billingName: order.billingName,\r\n        orderdate: order.orderdate,\r\n        total: order.total,\r\n        paymentStatus: order.paymentStatus,\r\n        paymentMethod: order.paymentMethod,\r\n        badgeclass: order.badgeclass\r\n      },\r\n      isEdit: true,\r\n    });\r\n\r\n    this.toggle();\r\n  };\r\n\r\n  /**\r\n   * Handling submit Order on Order form\r\n   */\r\n  handleValidOrderSubmit = (e, values) => {\r\n    const { onAddNewOrder, onUpdateOrder } = this.props;\r\n    const { isEdit, orders, selectedOrder } = this.state;\r\n\r\n    if (isEdit) {\r\n      const updateOrder = {\r\n        id: orders.id,\r\n        orderId: values.orderId,\r\n        billingName: values.billingName,\r\n        orderdate: values.orderdate,\r\n        total: values.total,\r\n        paymentStatus: values.paymentStatus,\r\n        paymentMethod: values.paymentMethod,\r\n        badgeclass: values.badgeclass\r\n      };\r\n\r\n      // update Order\r\n      onUpdateOrder(updateOrder);\r\n    } else {\r\n\r\n      const newOrder = {\r\n        id: Math.floor(Math.random() * (30 - 20)) + 20,\r\n        orderId: values[\"orderId\"],\r\n        billingName: values[\"billingName\"],\r\n        orderdate: values[\"orderdate\"],\r\n        total: values[\"total\"],\r\n        paymentStatus: values[\"paymentStatus\"],\r\n        paymentMethod: values[\"paymentMethod\"],\r\n        badgeclass: values['badgeclass']\r\n      };\r\n      // save new Order\r\n      onAddNewOrder(newOrder);\r\n    }\r\n    this.setState({ selectedOrder: null });\r\n    this.toggle();\r\n  };\r\n\r\n  handleValidDate = (date) => {\r\n    const date1 = moment(new Date(date)).format('DD MMM Y');\r\n    return date1;\r\n  };\r\n\r\n  render() {\r\n    const { orders } = this.props;\r\n\r\n    const { SearchBar } = Search;\r\n\r\n    const { isEdit } = this.state;\r\n\r\n    //pagination customization\r\n    const pageOptions = {\r\n      sizePerPage: 10,\r\n      totalSize: orders.length, // replace later with size(Order),\r\n      custom: true,\r\n    };\r\n\r\n    const defaultSorted = [{\r\n      dataField: 'orderId',\r\n      order: 'desc'\r\n    }];\r\n\r\n    const selectRow = {\r\n      mode: 'checkbox',\r\n    };\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <EcommerceOrdersModal\r\n          isOpen={this.state.viewmodal}\r\n          toggle={this.toggleViewModal}\r\n        />\r\n        <div className=\"page-content\">\r\n          <MetaTags>\r\n            <title>Project | Realty Space</title>\r\n          </MetaTags>\r\n          <Container fluid>\r\n            <Breadcrumbs title={this.props.t(\"Project\")} breadcrumbItem={this.props.t(\"Project\")} />\r\n            <Row>\r\n              <Col xs=\"12\">\r\n                <Card>\r\n                  <CardBody>\r\n                    <PaginationProvider\r\n                      pagination={paginationFactory((pageOptions || []))}\r\n                      keyField='id'\r\n                      columns={(this.state.EcommerceOrderColumns || [])}\r\n                      data={(orders || [])}\r\n                    >\r\n                      {({ paginationProps, paginationTableProps }) => (\r\n                        <ToolkitProvider\r\n                          keyField=\"id\"\r\n                          data={orders}\r\n                          columns={(this.state.EcommerceOrderColumns || [])}\r\n                          bootstrap4\r\n                          search\r\n                        >\r\n                          {toolkitProps => (\r\n                            <React.Fragment>\r\n                              <Row className=\"mb-2\">\r\n                                <Col sm=\"4\">\r\n                                  <div className=\"search-box me-2 mb-2 d-inline-block\">\r\n                                    <div className=\"position-relative\">\r\n                                      <SearchBar\r\n                                        {...toolkitProps.searchProps}\r\n                                      />\r\n                                      <i className=\"bx bx-search-alt search-icon\" />\r\n                                    </div>\r\n                                  </div>\r\n                                </Col>\r\n                                <Col sm=\"8\">\r\n                                  <div className=\"text-sm-end\">\r\n                                    <Button\r\n                                      type=\"button\"\r\n                                      color=\"success\"\r\n                                      className=\"btn-rounded mb-2 me-2\"\r\n                                      onClick={this.handleOrderClicks}\r\n                                    >\r\n                                      <i className=\"mdi mdi-plus me-1\" />{\" \"}\r\n                                      Add New Order\r\n                                    </Button>\r\n                                  </div>\r\n                                </Col>\r\n                              </Row>\r\n                              <div className=\"table-responsive\">\r\n                                <BootstrapTable\r\n                                  {...toolkitProps.baseProps}\r\n                                  {...paginationTableProps}\r\n                                  responsive\r\n                                  defaultSorted={defaultSorted}\r\n                                  bordered={false}\r\n                                  striped={false}\r\n                                  selectRow={selectRow}\r\n                                  classes={\r\n                                    \"table align-middle table-nowrap table-check\"\r\n                                  }\r\n                                  headerWrapperClasses={\"table-light\"}\r\n                                  ref={this.node}\r\n                                />\r\n                                <Modal\r\n                                  isOpen={this.state.modal}\r\n                                  className={this.props.className}\r\n                                >\r\n                                  <ModalHeader toggle={this.toggle} tag=\"h4\">\r\n                                    {!!isEdit ? \"Edit Order\" : \"Add Order\"}\r\n                                  </ModalHeader>\r\n                                  <ModalBody>\r\n                                    <AvForm\r\n                                      onValidSubmit={\r\n                                        this.handleValidOrderSubmit\r\n                                      }\r\n                                    >\r\n                                      <Row form>\r\n                                        <Col className=\"col-12\">\r\n\r\n                                          <div className=\"mb-3\">\r\n                                            <AvField\r\n                                              name=\"orderId\"\r\n                                              label=\"Order Id\"\r\n                                              type=\"text\"\r\n                                              errorMessage=\"Invalid orderId\"\r\n                                              validate={{\r\n                                                required: { value: true },\r\n                                              }}\r\n                                              value={this.state.orders.orderId || \"\"\r\n                                              }\r\n                                            />\r\n                                          </div>\r\n                                          <div className=\"mb-3\">\r\n                                            <AvField\r\n                                              name=\"billingName\"\r\n                                              label=\"Billing Name\"\r\n                                              type=\"text\"\r\n                                              errorMessage=\"Invalid Billing Name\"\r\n                                              validate={{\r\n                                                required: { value: true },\r\n                                              }}\r\n                                              value={this.state.orders.billingName || \"\"}\r\n                                            />\r\n                                          </div>\r\n                                          <div className=\"mb-3\">\r\n                                            <AvField\r\n                                              name=\"orderdate\"\r\n                                              label=\"Date\"\r\n                                              type=\"date\"\r\n                                              errorMessage=\"Invalid Date\"\r\n                                              validate={{\r\n                                                required: { value: true },\r\n                                              }}\r\n\r\n                                              value={this.state.orders.orderdate || \"\"}\r\n                                            />\r\n                                          </div>\r\n                                          <div className=\"mb-3\">\r\n                                            <AvField\r\n                                              name=\"total\"\r\n                                              label=\"Total\"\r\n                                              type=\"text\"\r\n                                              errorMessage=\"Invalid Total\"\r\n                                              validate={{\r\n                                                required: { value: true },\r\n                                              }}\r\n                                              value={this.state.orders.total || \"\"}\r\n                                            />\r\n                                          </div>\r\n                                          <div className=\"mb-3\">\r\n                                            <AvField\r\n                                              name=\"paymentStatus\"\r\n                                              label=\"Payment Status\"\r\n                                              type=\"select\"\r\n                                              id=\"status1\"\r\n                                              className=\"form-select\"\r\n                                              errorMessage=\"Invalid Payment Status\"\r\n                                              validate={{\r\n                                                required: { value: true },\r\n                                              }}\r\n                                              value={this.state.orders.paymentStatus || \"Paid\"}\r\n                                            >\r\n                                              <option>Paid</option>\r\n                                              <option>Chargeback</option>\r\n                                              <option>Refund</option>\r\n                                            </AvField>\r\n                                          </div>\r\n                                          <div className=\"mb-3\">\r\n                                            <AvField\r\n                                              name=\"badgeclass\"\r\n                                              label=\"Badge Class\"\r\n                                              type=\"select\"\r\n                                              className=\"form-select\"\r\n                                              errorMessage=\"Invalid Badge Class\"\r\n                                              validate={{\r\n                                                required: { value: true },\r\n                                              }}\r\n                                              value={this.state.orders.badgeclass || \"success\"}\r\n                                            >\r\n                                              <option>success</option>\r\n                                              <option>danger</option>\r\n                                              <option>warning</option>\r\n                                            </AvField>\r\n                                          </div>\r\n                                          <div className=\"mb-3\">\r\n                                            <AvField\r\n                                              name=\"paymentMethod\"\r\n                                              label=\"Payment Method\"\r\n                                              type=\"select\"\r\n                                              className=\"form-select\"\r\n                                              errorMessage=\"Invalid Payment Method\"\r\n                                              validate={{\r\n                                                required: { value: true },\r\n                                              }}\r\n                                              value={this.state.orders.paymentMethod || \"Mastercard\"}\r\n                                            >\r\n                                              <option>Mastercard</option>\r\n                                              <option>Visa</option>\r\n                                              <option>Paypal</option>\r\n                                              <option>COD</option>\r\n                                            </AvField>\r\n                                          </div>\r\n                                        </Col>\r\n\r\n                                      </Row>\r\n                                      <Row>\r\n                                        <Col>\r\n                                          <div className=\"text-end\">\r\n\r\n                                            <button\r\n                                              type=\"submit\"\r\n                                              className=\"btn btn-success save-user\"\r\n                                            >\r\n                                              Save\r\n                                            </button>\r\n                                          </div>\r\n                                        </Col>\r\n                                      </Row>\r\n                                    </AvForm>\r\n                                  </ModalBody>\r\n                                </Modal>\r\n                              </div>\r\n                              <div className=\"pagination pagination-rounded justify-content-end mb-2\">\r\n                                <PaginationListStandalone\r\n                                  {...paginationProps}\r\n                                />\r\n                              </div>\r\n                            </React.Fragment>\r\n                          )}\r\n                        </ToolkitProvider>\r\n                      )}\r\n                    </PaginationProvider>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nEcommerceOrders.propTypes = {\r\n  orders: PropTypes.array,\r\n  onGetOrders: PropTypes.func,\r\n  onAddNewOrder: PropTypes.func,\r\n  onDeleteOrder: PropTypes.func,\r\n  onUpdateOrder: PropTypes.func,\r\n  className: PropTypes.any,\r\n  t: PropTypes.any\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  orders: state.ecommerce.orders,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onGetOrders: () => dispatch(getOrders()),\r\n  onAddNewOrder: order => dispatch(addNewOrder(order)),\r\n  onUpdateOrder: order => dispatch(updateOrder(order)),\r\n  onDeleteOrder: order => dispatch(deleteOrder(order)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withTranslation()(EcommerceOrders));"]},"metadata":{},"sourceType":"module"}